{"version":3,"sources":["components/logo.js","components/navbar.js","components/map.js","components/newsStory.js","components/news.js","components/chatMessage.js","components/chat.js","components/login.js","reducers/rootReducer.js","stores/rootStore.js","components/register.js","components/settings.js","utils/youtubeHandler.js","components/music.js","components/memes.js","App.js","serviceWorker.js","index.js","utils/firebaseHandler.js"],"names":["Logo","style","color","className","size","version","viewBox","xmlns","fill","height","width","d","x","y","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","connect","state","ownProps","user","authed","props","Navbar","bg","Brand","Collapse","id","Nav","to","exact","activeClassName","dataLayer","type","paint","property","stops","numberWithCommas","toString","replace","useState","latitude","longitude","zoom","viewport","setViewport","geoData","setGeoData","hoveredFeature","setHoveredFeature","loading","setLoading","addToast","useToasts","useEffect","document","title","fetch","then","response","json","geoJson","coronaJson","forEach","country","currFeature","features","find","feature","properties","ISO_A3","toLowerCase","countryInfo","iso3","cases","deaths","recovered","casesToday","todayCases","tests","iso2","lat","long","setTimeout","catch","e","console","log","appearance","autoDismiss","flex","position","mapboxApiAccessToken","onViewportChange","mapStyle","onHover","event","hovered","f","layer","data","ADMIN","countryCode","backgroundColor","undefined","fontSize","href","target","rel","NewsStory","article","borderRadius","borderColor","onClick","window","open","url","src","urlToImage","objectFit","alt","source","name","author","trim","moment","publishedAt","fromNow","News","global","articles","local","coords","getLocalNews","usr","handleGetNews","setState","term","Promise","res","rej","getName","subtract","format","status","oldProps","newProps","this","renderView","map","key","Math","random","Component","ChatMessage","message","username_color","username","socket","openSocket","process","setMessage","messages","setMessages","messagesRef","useRef","scrollBar","current","receiveMessage","msg","scrollToBottom","on","off","sendMessage","encodeURI","method","ref","placeholder","onChange","value","onKeyDown","keyCode","disabled","borderTopRightRadius","borderBottomRightRadius","Login","email","setEmail","password","setPassword","history","useHistory","firebase","auth","signInWithPopup","FacebookAuthProvider","push","GithubAuthProvider","Form","Group","controlId","Label","Control","signInWithEmailAndPassword","initState","rootReducer","action","rootStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","Register","confirmPassword","setConfirmPassword","setUsername","setCountry","countries","getData","createUserData","uid","firestore","collection","doc","set","user_id","marginBottom","Tabs","defaultActiveKey","Tab","eventKey","as","code","test","String","createUserWithEmailAndPassword","dispatch","updateUser","setColor","updatedValues","setUpdatedValues","colorPicker","setColorPicker","handleUpdateValue","temp","toggleColorPicker","left","right","top","bottom","cursor","preventDefault","onChangeComplete","hex","split","Object","keys","length","update","signOut","searchYoutube","headers","Accept","items","searchTerm","setSearchTerm","searchedSongs","setSearchedSongs","songs","setSongs","forceUpdate","setForceUpdate","addSongModalVisible","setAddSongModalVisible","selectedSong","setSelectedSong","timestamp","setTimestamp","sortType","setSortType","get","snapshot","song","sortSongs","changeSortType","a","sngs","sort","b","created_at","upvotes","searchForSong","parseTimestamp","durs","hours","parseInt","minutes","seconds","duration","asSeconds","closeAddSongModal","Modal","show","onHide","Header","closeButton","Title","Body","videoId","snippet","thumbnails","default","match","dec","fromCharCode","channelTitle","mask","defaultValue","inputProps","Footer","Button","variant","newSong","toISOString","song_id","add","docRef","Dropdown","Toggle","Menu","Item","hideTracksWhenNotNeeded","controls","confirm","delete","filter","index","findIndex","s","includes","toggleUpvote","memes","setMemes","addMemeModalVisible","setAddMemeModalVisible","uploadingImage","setUploadingImage","deleteHovered","setDeleteHovered","memeToUpload","setMemeToUpload","uploadingProgress","setUploadingProgress","uploading","setUploading","widthRef","meme","sortMemes","mms","closeAddMemeModal","onMouseEnter","onMouseLeave","URL","createObjectURL","onDrop","acceptedFiles","getRootProps","getInputProps","multiple","accept","ProgressBar","now","label","newMeme","meme_id","storage","put","progress","round","bytesTransferred","totalBytes","child","getDownloadURL","offsetWidth","App","store","autoDismissTimeout","path","Boolean","location","hostname","Geocode","setApiKey","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","performance","onAuthStateChanged","userData","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.46419742.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Logo = ({ style = {}, color = \"black\", className = \"\", size = 100 }) => (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 64 64\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={style}\n    fill={color}\n    className={className}\n    height={size}\n    width={size}\n  >\n    <path d=\" c-1.2-0.8-2.4,0.1-3.2,0.7c-0.1,0.1-0.3,0.2-0.4,0.3c0-0.2,0-0.4,0-0.5c0-0.9-0.1-2.5-1.6-2.9c-1.4-0.3-2.2,1-2.8,1.8  c-0.1,0.1-0.2,0.3-0.3,0.4c-0.1-0.2-0.1-0.3-0.2-0.5c-0.4-0.9-0.9-2.3-2.5-2.2c-1.5,0.2-1.8,1.7-2,2.6c0,0.1-0.1,0.3-0.1,0.5  c-0.1-0.1-0.2-0.3-0.3-0.4c-0.7-0.8-1.7-1.9-3.1-1.3c-1.3,0.7-1.1,2.2-1,3.2c0,0.2,0.1,0.4,0.1,0.6c-0.2-0.1-0.3-0.2-0.5-0.2  c-0.8-0.4-2.3-1.2-3.4-0.1c-1,1.1-0.3,2.4,0.2,3.3c0.1,0.2,0.2,0.5,0.3,0.7c-0.2,0-0.5,0-0.7,0c-1-0.1-2.6-0.2-3.2,1.3  c-0.2,0.5,0,1.1,0.5,1.3c0.5,0.2,1.1,0,1.3-0.5c0.1-0.2,0.8-0.1,1.2-0.1c0.9,0.1,2,0.1,2.6-0.8c0.6-0.9,0.1-2-0.3-2.8  c-0.1-0.3-0.4-0.8-0.4-1c0.2,0,0.7,0.3,1,0.4c0.8,0.4,1.8,0.9,2.7,0.3c0.9-0.6,0.8-1.8,0.6-2.7c0-0.3-0.1-0.8-0.1-1  c0.2,0.2,0.5,0.5,0.7,0.7c0.6,0.7,1.4,1.5,2.4,1.2c1.1-0.3,1.3-1.4,1.5-2.3c0.1-0.3,0.2-0.7,0.2-0.9c0.1,0.2,0.3,0.6,0.4,0.9  c0.3,0.9,0.8,1.9,1.8,2c1.1,0.1,1.7-0.9,2.2-1.6c0.1-0.2,0.4-0.6,0.5-0.8c0.1,0.3,0.1,0.7,0.1,1c0,0.9,0.1,2.1,1.1,2.5  c1,0.5,1.9-0.2,2.6-0.8c0.2-0.2,0.6-0.5,0.8-0.6c0,0.3-0.2,0.7-0.3,1c-0.3,0.9-0.6,2,0.1,2.7c0.8,0.8,1.9,0.5,2.7,0.3  c0.3-0.1,1-0.3,1.1-0.3c0,0.2-0.4,0.7-0.6,1c-0.5,0.7-1.3,1.7-0.8,2.7c0.2,0.4,0.5,0.6,0.9,0.6c0.1,0,0.3,0,0.4-0.1  c0.5-0.2,0.7-0.7,0.5-1.2c0.1-0.2,0.3-0.6,0.5-0.8C46.1,29.1,47,27.9,46.2,26.6z\" />\n    <path d=\"M56.9,42.9c-1.1-0.7-2.5-0.5-3.4,0.3l-2.8-1.6c1-2,1.7-4.1,2.1-6.4l4,0.4l0.2-2l-4-0.4c0-0.4,0.1-0.8,0.1-1.2  s0-0.8-0.1-1.2l4-0.4l-0.2-2l-4,0.4c-0.3-2.3-1.1-4.4-2.1-6.4l2.8-1.6c0.9,0.8,2.3,1,3.4,0.3c1.4-0.8,1.9-2.7,1.1-4.1  s-2.7-1.9-4.1-1.1c-1.1,0.7-1.7,1.9-1.4,3.1l-2.8,1.6c-1.2-1.9-2.8-3.6-4.5-5l2.4-3.3l-1.6-1.2l-2.4,3.3c-0.7-0.4-1.4-0.8-2.1-1.2  l1.6-3.7l-1.8-0.8l-1.6,3.7c-2.1-0.8-4.3-1.3-6.6-1.4V7.8c1.2-0.4,2-1.5,2-2.8c0-1.7-1.3-3-3-3s-3,1.3-3,3c0,1.3,0.8,2.4,2,2.8v3.2  c-2.3,0.1-4.5,0.6-6.6,1.4l-1.6-3.7l-1.8,0.8l1.6,3.7c-0.7,0.4-1.4,0.8-2.1,1.2l-2.4-3.3l-1.6,1.2l2.4,3.3c-1.8,1.4-3.3,3.1-4.5,5  L11.6,19c0.2-1.2-0.3-2.5-1.4-3.1C8.7,15.1,6.8,15.6,6,17s-0.3,3.3,1.1,4.1c1.1,0.7,2.5,0.5,3.4-0.3l2.8,1.6c-1,2-1.7,4.1-2.1,6.4  l-4-0.4l-0.2,2l4,0.4c0,0.4-0.1,0.8-0.1,1.2s0,0.8,0.1,1.2l-4,0.4l0.2,2l4-0.4c0.3,2.3,1.1,4.4,2.1,6.4l-2.8,1.6  c-0.9-0.8-2.3-1-3.4-0.3C5.7,43.7,5.2,45.6,6,47s2.7,1.9,4.1,1.1c1.1-0.7,1.7-1.9,1.4-3.1l2.8-1.6c1.2,1.9,2.8,3.6,4.5,5l-2.4,3.3  l1.6,1.2l2.4-3.3c0.7,0.4,1.4,0.8,2.1,1.2l-1.6,3.7l1.8,0.8l1.6-3.7c2.1,0.8,4.3,1.3,6.6,1.4v3.2c-1.2,0.4-2,1.5-2,2.8  c0,1.7,1.3,3,3,3s3-1.3,3-3c0-1.3-0.8-2.4-2-2.8v-3.2c2.3-0.1,4.5-0.6,6.6-1.4l1.6,3.7l1.8-0.8l-1.6-3.7c0.7-0.4,1.4-0.8,2.1-1.2  l2.4,3.3l1.6-1.2l-2.4-3.3c1.8-1.4,3.3-3.1,4.5-5l2.8,1.6c-0.2,1.2,0.3,2.5,1.4,3.1c1.4,0.8,3.3,0.3,4.1-1.1S58.3,43.7,56.9,42.9z   M44,46.8l-1.2-1.6l-1.6,1.2l1.2,1.6c-0.6,0.4-1.1,0.7-1.7,1l-0.8-1.8L38,47.9l0.8,1.8C37,50.4,35,50.8,33,50.9V49h-2v1.9  c-2-0.1-4-0.5-5.8-1.2l0.8-1.8l-1.8-0.8l-0.8,1.8c-0.6-0.3-1.2-0.6-1.7-1l1.2-1.6l-1.6-1.2L20,46.8c-1.5-1.3-2.9-2.7-4-4.4l1.7-1  l-1-1.7l-1.7,1c-0.9-1.7-1.5-3.6-1.8-5.6l1.9-0.2l-0.2-2L13.1,33c0-0.3-0.1-0.7-0.1-1s0-0.7,0.1-1l1.9,0.2l0.2-2L13.3,29  c0.3-2,0.9-3.9,1.8-5.6l1.7,1l1-1.7l-1.7-1c1.1-1.7,2.4-3.2,4-4.4l1.2,1.6l1.6-1.2l-1.2-1.6c0.6-0.4,1.1-0.7,1.7-1l0.8,1.8l1.8-0.8  l-0.8-1.8c1.8-0.7,3.8-1.1,5.8-1.2V15h2v-1.9c2,0.1,4,0.5,5.8,1.2L38,16.1l1.8,0.8l0.8-1.8c0.6,0.3,1.2,0.6,1.7,1l-1.2,1.6l1.6,1.2  l1.2-1.6c1.5,1.3,2.9,2.7,4,4.4l-1.7,1l1,1.7l1.7-1c0.9,1.7,1.5,3.6,1.8,5.6l-1.9,0.2l0.2,2l1.9-0.2c0,0.3,0.1,0.7,0.1,1  s0,0.7-0.1,1L49,32.8l-0.2,2l1.9,0.2c-0.3,2-0.9,3.9-1.8,5.6l-1.7-1l-1,1.7l1.7,1C46.8,44,45.5,45.5,44,46.8z\" />\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"50%\"\n      height=\"50%\"\n      x=\"25%\"\n      y=\"25%\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\" />\n      <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\" />\n    </svg>\n  </svg>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport {\n  MessageSquare,\n  Globe,\n  FileText,\n  Music,\n  Image,\n  Settings,\n  LogIn,\n} from \"react-feather\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Logo from \"./logo\";\n\nfunction NavBar(props) {\n  return (\n    <Navbar bg=\"dark\" className=\"flex-column p-0\">\n      <Navbar.Brand className=\"mr-0 text-white h6 px-3 d-flex flex-column align-items-center\">\n        <Logo color={\"lime\"} size={50} className=\"hover-spinner\" />\n        COVinfo\n      </Navbar.Brand>\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"flex-column w-100\">\n        <Nav className=\"flex-column w-100 flex\">\n          <NavLink\n            to={\"/\"}\n            exact\n            activeClassName={\"current\"}\n            className=\"text-center py-3 w-100 nav-item\"\n          >\n            <FileText size={35} />\n          </NavLink>\n          <NavLink\n            to={\"/map\"}\n            activeClassName={\"current\"}\n            className=\"text-center py-3 w-100 nav-item\"\n          >\n            <Globe size={35} />\n          </NavLink>\n          <NavLink\n            to={\"/chat\"}\n            activeClassName={\"current\"}\n            className=\"text-center py-3 w-100 nav-item\"\n          >\n            <MessageSquare size={35} />\n          </NavLink>\n          <NavLink\n            to={\"/music\"}\n            activeClassName={\"current\"}\n            className=\"text-center py-3 w-100 nav-item\"\n          >\n            <Music size={35} />\n          </NavLink>\n          <NavLink\n            to={\"/memes\"}\n            activeClassName={\"current\"}\n            className=\"text-center py-3 w-100 nav-item\"\n          >\n            <Image size={35} />\n          </NavLink>\n          <div className=\"flex\" />\n          {props.authed ? (\n            <NavLink\n              to={\"/settings\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <Settings size={35} />\n            </NavLink>\n          ) : (\n            <NavLink\n              to={\"/login\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <LogIn size={35} />\n            </NavLink>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n","import React, { useEffect, useState } from \"react\";\nimport ReactMapGl, { Source, Layer } from \"react-map-gl\";\nimport { connect } from \"react-redux\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst dataLayer = {\n  id: \"data\",\n  type: \"fill\",\n  paint: {\n    \"fill-color\": {\n      property: \"cases\",\n      stops: [\n        [0, \"#abdda4\"],\n        [10, \"#e6f598\"],\n        [100, \"#ffffbf\"],\n        [1000, \"#fee08b\"],\n        [10000, \"#fdae61\"],\n        [100000, \"#f46d43\"],\n        [1000000, \"#d53e4f\"],\n      ],\n    },\n    \"fill-opacity\": 0.8,\n  },\n};\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction Map(props) {\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 39.9526,\n    longitude: -75.1652,\n    zoom: 5,\n  });\n  const [geoData, setGeoData] = useState(null);\n  const [hoveredFeature, setHoveredFeature] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { addToast } = useToasts();\n\n  let _onHover = (event) => {\n    const { features } = event;\n    const hovered = features && features.find((f) => f.layer.id === \"data\");\n    setHoveredFeature(hovered);\n  };\n\n  let _renderTooltip = () => {\n    return hoveredFeature ? (\n      <div className=\"map-tooltip\">\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"font-weight-bold\">\n            {hoveredFeature.properties.ADMIN}\n          </div>\n          {hoveredFeature.properties.iso2 ? (\n            <ReactCountryFlag\n              countryCode={hoveredFeature.properties.iso2}\n              className=\"ml-1\"\n            />\n          ) : null}\n        </div>\n        <div style={{ width: \"100%\", height: 1, backgroundColor: \"#fff\" }} />\n        {hoveredFeature.properties.cases !== undefined ? (\n          <div>\n            Total Cases: {numberWithCommas(hoveredFeature.properties.cases)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.deaths !== undefined ? (\n          <div>\n            Deaths: {numberWithCommas(hoveredFeature.properties.deaths)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.recovered !== undefined ? (\n          <div>\n            Recoveries: {numberWithCommas(hoveredFeature.properties.recovered)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.tests !== undefined ? (\n          <div>Tests: {numberWithCommas(hoveredFeature.properties.tests)}</div>\n        ) : null}\n        {hoveredFeature.properties.casesToday === undefined ||\n        hoveredFeature.properties.casesToday === 0 ? null : (\n          <div>\n            Cases Today:{\" \"}\n            {numberWithCommas(hoveredFeature.properties.casesToday)}\n          </div>\n        )}\n        <div style={{ fontSize: \"1em\" }}>\n          Data Provided by{\" \"}\n          <a\n            href=\"https://github.com/NovelCOVID/API\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NovelCOVID\n          </a>\n        </div>\n      </div>\n    ) : null;\n  };\n\n  useEffect(() => {\n    document.title = \"Map | COVinfo\";\n    fetch(\"https://covinfo.tech/mapData\")\n      .then((response) => response.json())\n      .then(({ geoJson, coronaJson }) => {\n        coronaJson.forEach((country) => {\n          let currFeature = geoJson.features.find(\n            (feature) =>\n              feature.properties.ISO_A3.toLowerCase() ===\n              country.country.countryInfo.iso3.toLowerCase()\n          );\n          if (currFeature) {\n            currFeature.properties = {\n              ...currFeature.properties,\n              cases: country.cases,\n              deaths: country.deaths,\n              recovered: country.recovered,\n              casesToday: country.todayCases,\n              tests: country.tests,\n              iso2: country.countryInfo.iso2,\n            };\n            if (props.authed && props.user) {\n              if (\n                props.user.country === country.countryInfo.iso2 ||\n                props.user.country === country.countryInfo.iso3\n              ) {\n                setViewport({\n                  ...viewport,\n                  latitude: country.countryInfo.lat,\n                  longitude: country.countryInfo.long,\n                });\n              }\n            }\n          }\n        });\n        setGeoData(geoJson);\n        setTimeout(() => setLoading(false), 1000);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n        addToast(\"There was a problem loading the data\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  }, []);\n\n  return (\n    <div style={{ flex: 1, position: \"relative\" }}>\n      {loading ? (\n        <div className=\"map-loading\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : null}\n      <ReactMapGl\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoibmdyZWdyaWNoYXJkc29uIiwiYSI6ImNrOHY0dGdsdjA2NjYzZnNmMWVzZW53OGQifQ.OLl9xQNCBOTHwVRlz-06lA\"\n        }\n        {...viewport}\n        onViewportChange={setViewport}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onHover={_onHover}\n      >\n        <Source type=\"geojson\" data={geoData}>\n          <Layer {...dataLayer} />\n        </Source>\n        {_renderTooltip()}\n      </ReactMapGl>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Map);\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\n\nfunction NewsStory(props) {\n  const [article] = useState(props.article);\n\n  let openArticleLink = () => {\n    window.open(article.url, \"_blank\");\n  };\n\n  return (\n    <button\n      className=\"p-2 text-white d-flex flex-row align-items-center mb-3 text-left w-100 bg-transparent border newsStory\"\n      style={{ borderRadius: 10, borderColor: \"lightgray\" }}\n      onClick={openArticleLink}\n    >\n      <img\n        src={\n          article.urlToImage ||\n          \"https://designshack.net/wp-content/uploads/placeholder-image.png\"\n        }\n        width={70}\n        height={70}\n        style={{ borderRadius: 5, objectFit: \"cover\" }}\n        alt={\"article_img\"}\n      />\n      <div className=\"d-flex flex-column justify-content-center ml-3\">\n        <h5 className=\"mb-0 text-dark\">{article.title}</h5>\n        <span className=\"ml-2 h6 text-black-50\">\n          {article.source.name} ·\n          {article.author && article.author.trim() !== \"\"\n            ? ` ${article.author} · `\n            : \" \"}\n          {moment(article.publishedAt).fromNow()}\n        </span>\n      </div>\n    </button>\n  );\n}\n\nexport default NewsStory;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport NewsStory from \"./newsStory\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { connect } from \"react-redux\";\nimport { getName } from \"country-list\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\n\nclass News extends Component {\n  state = {\n    global: { articles: [], loading: true },\n    local: { articles: [], loading: true, title: \"Local Coronavirus News\" },\n    coords: { latitude: null, longitude: null },\n  };\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if (oldProps.authed !== newProps.authed) {\n      this.setState({ local: { ...this.state.local, loading: true } });\n      this.getLocalNews();\n    }\n  }\n\n  getLocalNews = () => {\n    if (this.props.authed && this.props.user) {\n      let usr = this.props.user;\n      this.handleGetNews(usr.country).then((articles) => {\n        this.setState({\n          local: {\n            articles,\n            loading: false,\n            title: `Local Coronavirus News (${usr.country})`,\n            country: usr.country,\n          },\n        });\n      });\n    } else {\n      this.handleGetNews(\"United States of America\").then((articles) => {\n        this.setState({\n          local: {\n            articles,\n            loading: false,\n            title: `Local Coronavirus News (US)`,\n          },\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    document.title = \"Dashboard | COVinfo\";\n    this.handleGetNews().then((articles) => {\n      this.setState({\n        global: { articles, loading: false },\n      });\n    });\n    this.getLocalNews();\n  }\n\n  handleGetNews = (term = \"\") => {\n    return new Promise((res, rej) => {\n      term = \" \" + getName(term);\n      fetch(\n        `https://newsapi.org/v2/everything?q=coronavirus${term}&from=${moment()\n          .subtract(14, \"days\")\n          .format(\n            \"YYYY-MM-DD\"\n          )}&sortBy=relevancy&language=en&apiKey=a24bf4b7cea34b6c88e899238f856cfa`\n      )\n        .then((d) => d.json())\n        .then((json) => {\n          if (json.status !== \"error\") {\n            res(json.articles);\n          } else {\n            rej(\"There was a problem getting the news.\");\n          }\n        })\n        .catch((e) => {\n          rej(\"There was a problem getting the news.\");\n        });\n    });\n  };\n\n  render() {\n    let { global, local } = this.state;\n    return (\n      <div className=\"d-flex flex-column flex p-3\">\n        <div className=\"d-flex flex-row\">\n          <h3 className=\"flex ml-2\">Global Coronavirus News</h3>\n          <div className=\"flex ml-2 d-flex flex-row align-items-center mb-2\">\n            <h3 className=\"m-0\">{local.title}</h3>\n            <ReactCountryFlag countryCode={local.country} className=\"ml-1\" />\n          </div>\n        </div>\n        <div className=\"d-flex flex-row flex\">\n          <div\n            className={`p-1 flex d-flex flex-column align-items-center ${\n              local.loading ? \"justify-content-center\" : \"\"\n            }`}\n          >\n            <Scrollbars\n              renderView={(props) => (\n                <div\n                  {...props}\n                  className={`pr-3 flex d-flex flex-column align-items-center ${\n                    global.loading ? \"justify-content-center\" : \"\"\n                  }`}\n                />\n              )}\n            >\n              {global.loading ? (\n                <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n              ) : (\n                this.state.global.articles.map((article) => {\n                  if (article.title && article.title.trim() !== \"\") {\n                    return (\n                      <NewsStory\n                        article={article}\n                        key={\n                          article.publishedAt +\n                          article.title +\n                          `${Math.random() * 5}`\n                        }\n                      />\n                    );\n                  }\n                  return null;\n                })\n              )}\n            </Scrollbars>\n          </div>\n          <div\n            className={`p-1 flex d-flex flex-column align-items-center ${\n              local.loading ? \"justify-content-center\" : \"\"\n            }`}\n          >\n            <Scrollbars\n              renderView={(props) => (\n                <div\n                  {...props}\n                  className={`pr-3 flex d-flex flex-column align-items-center ${\n                    local.loading ? \"justify-content-center\" : \"\"\n                  }`}\n                />\n              )}\n            >\n              {local.loading ? (\n                <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n              ) : (\n                this.state.local.articles.map((article) => {\n                  if (article.title && article.title.trim() !== \"\") {\n                    return (\n                      <NewsStory\n                        article={article}\n                        key={\n                          article.publishedAt +\n                          article.title +\n                          `${Math.random() * 5}`\n                        }\n                      />\n                    );\n                  }\n                  return null;\n                })\n              )}\n            </Scrollbars>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(News);\n","import React from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\n\nfunction ChatMessage(props) {\n  return (\n    <div className=\"mb-2 chatMessage bg-white p-2\">\n      <div className=\"d-flex flex-row align-items-center mb-1\">\n        <h6\n          style={{ color: \"#\" + props.message.username_color }}\n          className=\"mb-0\"\n        >\n          {props.message.username}\n        </h6>\n        <ReactCountryFlag\n          countryCode={props.message.country}\n          className=\"ml-1\"\n        />\n      </div>\n      <span className=\"ml-2\">{props.message.message}</span>\n    </div>\n  );\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Send } from \"react-feather\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport ChatMessage from \"./chatMessage\";\nimport openSocket from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nconst socket = openSocket(process.env.REACT_APP_DOMAIN);\n\nfunction Chat(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const messagesRef = useRef(messages);\n  const scrollBar = useRef(null);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    messagesRef.current = messages;\n  });\n\n  let receiveMessage = (msg) => {\n    setMessages([...messagesRef.current, msg]);\n    scrollToBottom();\n  };\n\n  useEffect(() => {\n    document.title = \"Chat | COVinfo\";\n    socket.on(\"message\", receiveMessage);\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  let scrollToBottom = () => {\n    scrollBar.current.scrollToBottom();\n  };\n\n  let sendMessage = () => {\n    fetch(\n      encodeURI(\n        `${process.env.REACT_APP_DOMAIN}/chat/sendMessage?message=${message}&username=${props.user.username}&username_color=${props.user.username_color}&country=${props.user.country}`\n      ),\n      { method: \"POST\" }\n    )\n      .then((res) => {\n        setMessage(\"\");\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem sending the message.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let _handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\">\n      <div className=\"flex pl-3 pt-3 pr-3 d-flex flex-column\">\n        <h3>Quarantine Chat</h3>\n        <Scrollbars\n          renderView={(props) => <div {...props} className=\"pr-3 flex\" />}\n          ref={scrollBar}\n        >\n          {messages.map((msg) => (\n            <ChatMessage\n              message={msg}\n              key={`${msg.username}_${Math.random() * 10}`}\n            />\n          ))}\n        </Scrollbars>\n      </div>\n      <div className=\"w-100 p-3\">\n        <div className=\"w-100 d-flex flex-row rounded-pill messageInputContainer\">\n          <input\n            type={\"text\"}\n            className=\"flex bg-transparent border-0 py-2 px-3 messageInput\"\n            placeholder={\n              props.authed ? \"Message...\" : \"Login to enable chat...\"\n            }\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={_handleKeyPress}\n            value={message}\n            disabled={!props.authed}\n          />\n          {message.trim() !== \"\" ? (\n            <button\n              className=\"bg-primary border-0 d-flex align-items-center justify-content-center pl-3 pr-4\"\n              style={{\n                borderTopRightRadius: 100,\n                borderBottomRightRadius: 100,\n              }}\n              onClick={sendMessage}\n            >\n              <Send color={\"white\"} />\n            </button>\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { Facebook, GitHub } from \"react-feather\";\nimport { Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  let handleNavigateToRegister = () => {\n    history.push(\"/register\");\n  };\n\n  let handleLoginWithEmail = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem logging in.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then()\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem logging in.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithGithub = () => {\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GithubAuthProvider())\n      .then()\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem logging in.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex align-items-center justify-content-center offWhiteBackground\">\n      <div className=\"bg-white d-flex flex-column align-items-center form-padding rounded boxShadow\">\n        <h3>Log in</h3>\n        <div style={{ height: 1, width: \"25%\", backgroundColor: \"gray\" }} />\n        <div className=\"d-flex flex-row align-items-center justify-content-center p-3\">\n          <button\n            className=\"smLoginButton bg-white rounded-circle p-2 d-flex align-items-center justify-content-center mx-2\"\n            onClick={handleLoginWithFacebook}\n          >\n            <Facebook />\n          </button>\n          <button\n            className=\"smLoginButton bg-white rounded-circle p-2 d-flex align-items-center justify-content-center mx-2\"\n            onClick={handleLoginWithGithub}\n          >\n            <GitHub />\n          </button>\n        </div>\n        <span className=\"mb-2 text-muted\">or use your email</span>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email...\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password...\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <button className=\"bg-transparent border-0 float-right align-self-end mb-3\">\n            Forgot Password?\n          </button>\n        </Form>\n        <button\n          className=\"bg-white smLoginButton rounded-pill py-2 px-3\"\n          onClick={handleLoginWithEmail}\n        >\n          Log in\n        </button>\n        <button\n          className=\"bg-white smLoginButton rounded-pill py-2 px-3 mt-3\"\n          onClick={handleNavigateToRegister}\n        >\n          Register\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","let initState = { user: null, authed: false };\n\nlet rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER\":\n      return { ...state, user: action.user, authed: true };\n    case \"CLEAR_USER\":\n      return { ...state, user: null, authed: false };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst rootStore = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default rootStore;\n","import React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { Facebook, GitHub } from \"react-feather\";\nimport { Form, Tab, Tabs } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { getData } from \"country-list\";\nimport { useToasts } from \"react-toast-notifications\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [country, setCountry] = useState(\"US\");\n  const countries = getData();\n  const { addToast } = useToasts();\n\n  let history = useHistory();\n\n  let validateEmail = (eml) => {\n    let regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(eml).toLowerCase());\n  };\n\n  let createUserData = (uid) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(uid)\n      .set({ username, country, username_color: \"000000\", user_id: uid })\n      .then(() => {\n        history.push(\"/\");\n        addToast(\"User created.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem creating the user.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleRegisterWithEmail = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (email.trim() === \"\" || !validateEmail(email)) {\n      return addToast(\"A valid email is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (password.trim() === \"\" || confirmPassword.trim() === \"\") {\n      return addToast(\"A valid password is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (password === confirmPassword) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then((user) => {\n          createUserData(user.user.uid);\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem creating the user.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    } else {\n      return addToast(\"Passwords do not match\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let handleLoginWithFacebook = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then()\n      .then((user) => {\n        createUserData(user.user.uid);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem creating the user.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithGithub = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GithubAuthProvider())\n      .then()\n      .then((user) => {\n        createUserData(user.user.uid);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem creating the user.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex align-items-center justify-content-center offWhiteBackground\">\n      <div className=\"bg-white d-flex flex-column align-items-center p-5 rounded boxShadow\">\n        <h3>Register</h3>\n        <div\n          style={{\n            height: 1,\n            width: \"25%\",\n            backgroundColor: \"gray\",\n            marginBottom: 15,\n          }}\n        />\n        <Tabs defaultActiveKey=\"email\" id={\"registerTabs\"}>\n          <Tab eventKey=\"email\" title=\"Email\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"emailUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"emailEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email...\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password...\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailConfirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password...\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill w-25 py-2\"\n                onClick={handleRegisterWithEmail}\n              >\n                Register\n              </button>\n            </div>\n          </Tab>\n          <Tab eventKey=\"facebook\" title=\"Facebook\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"facebookUsername\">\n                  <Form.Label>Create Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Create Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"facebookCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill w-25 py-2\"\n                onClick={handleLoginWithFacebook}\n              >\n                <Facebook /> Register\n              </button>\n            </div>\n          </Tab>\n          <Tab eventKey=\"github\" title=\"Github\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"githubUsername\">\n                  <Form.Label>Create Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Create Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"githubCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill w-25 py-2\"\n                onClick={handleLoginWithGithub}\n              >\n                <GitHub /> Register\n              </button>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getData } from \"country-list\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { TwitterPicker } from \"react-color\";\nimport { LogOut } from \"react-feather\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Logo from \"./logo\";\n\nfunction Settings(props) {\n  const [username, setUsername] = useState(\n    props.user ? props.user.username : \"\"\n  );\n  const [country, setCountry] = useState(props.user ? props.user.country : \"\");\n  const [color, setColor] = useState(\n    props.user ? props.user.username_color : \"ffffff\"\n  );\n  const [updatedValues, setUpdatedValues] = useState({});\n  const [colorPicker, setColorPicker] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const countries = getData();\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (props.user) {\n      setLoading(false);\n      if (props.user.username !== username) {\n        setUsername(props.user.username);\n      }\n      if (props.user.country !== country) {\n        setCountry(props.user.country);\n      }\n      if (props.user.username_color !== color) {\n        setColor(props.user.username_color);\n      }\n    }\n  }, [props.user, username, setUsername, country, setCountry, color, setColor]);\n\n  let handleSaveUser = () => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(props.user.user_id)\n      .update(updatedValues)\n      .then(() => {\n        props.updateUser({ ...props.user, ...updatedValues });\n        setUpdatedValues({});\n        addToast(\"User saved.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem saving the user.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleUpdateValue = (key, value) => {\n    let temp = updatedValues;\n    temp[key] = value;\n    setUpdatedValues(temp);\n  };\n\n  let toggleColorPicker = () => {\n    setColorPicker(!colorPicker);\n  };\n\n  let handleLogOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push(\"/\");\n        addToast(\"Logged out.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem logging out.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex align-items-center justify-content-center offWhiteBackground position-relative\">\n      {loading ? (\n        <div\n          style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n          }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : null}\n      <div className=\"bg-white d-flex flex-column align-items-center p-5 rounded boxShadow\">\n        <h3>Settings</h3>\n        <div style={{ height: 1, width: \"25%\", backgroundColor: \"gray\" }} />\n        <Form>\n          <Form.Group controlId=\"settingsUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username...\"\n              value={updatedValues.username || username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n                handleUpdateValue(\"username\", e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"settingsCountry\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={updatedValues.country || country}\n              onChange={(e) => {\n                setCountry(e.target.value);\n                handleUpdateValue(\"country\", e.target.value);\n              }}\n            >\n              {countries.map((country) => (\n                <option key={country.code} value={country.code}>\n                  {country.name}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"settingsColor\">\n            <div className=\"d-flex flex-row align-items-center justify-content-center\">\n              <div\n                className=\"rounded mr-2 position-relative\"\n                style={{\n                  width: 30,\n                  height: 30,\n                  backgroundColor: `#${updatedValues.username_color || color}`,\n                }}\n              >\n                <div\n                  style={{ cursor: \"pointer\", width: 30, height: 30 }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    toggleColorPicker();\n                  }}\n                />\n                {colorPicker ? (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      left: \"-20%\",\n                      top: \"130%\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        position: \"fixed\",\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                      }}\n                      onClick={toggleColorPicker}\n                    />\n                    <TwitterPicker\n                      color={`#${updatedValues.username_color || color}`}\n                      onChangeComplete={(color) => {\n                        setColor(color.hex.split(\"#\")[1]);\n                        handleUpdateValue(\n                          \"username_color\",\n                          color.hex.split(\"#\")[1]\n                        );\n                        toggleColorPicker();\n                      }}\n                    />\n                  </div>\n                ) : null}\n              </div>\n              <h6 className=\"mb-0\">Username Color</h6>\n            </div>\n          </Form.Group>\n        </Form>\n        <button\n          className={`bg-white smLoginButton rounded-pill w-25 py-2 ${\n            Object.keys(updatedValues).length === 0 ? \"fullButton\" : \"\"\n          }`}\n          onClick={handleSaveUser}\n          disabled={Object.keys(updatedValues).length === 0}\n        >\n          Save User\n        </button>\n        <button\n          className=\"bg-white smLoginButton rounded-pill w-25 py-2 text-danger mt-2\"\n          onClick={handleLogOut}\n        >\n          <LogOut /> Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return { updateUser: (user) => dispatch({ type: \"UPDATE_USER\", user }) };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","let searchYoutube = (term) => {\n  return new Promise((res, rej) => {\n    fetch(\n      `https://www.googleapis.com/youtube/v3/search?key=${\n        process.env.REACT_APP_GOOGLE_API_KEY\n      }&part=snippet&videoEmbeddable=true&q=${encodeURI(\n        term\n      )}&type=video&videoCategoryId=10`,\n      {\n        headers: {\n          Accept: \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.items) {\n          res(json.items);\n        } else {\n          rej(\"No videos found\");\n        }\n      })\n      .catch((e) => rej(e));\n  });\n};\n\nexport default searchYoutube;\n","import React, { useEffect, useState } from \"react\";\nimport searchYoutube from \"../utils/youtubeHandler\";\nimport firebase from \"firebase\";\nimport moment from \"moment\";\nimport ReactPlayer from \"react-player\";\nimport {\n  Search,\n  ThumbsUp,\n  UploadCloud,\n  Filter,\n  Clock,\n  Trash,\n} from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\nimport InputMask from \"react-input-mask\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\n\nfunction Music(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchedSongs, setSearchedSongs] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const [addSongModalVisible, setAddSongModalVisible] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [timestamp, setTimestamp] = useState(\"00:00:00\");\n  const [sortType, setSortType] = useState(\"popular\");\n  const { addToast } = useToasts();\n\n  let loadSongs = () => {\n    firebase\n      .firestore()\n      .collection(\"songs\")\n      .get()\n      .then((snapshot) => {\n        let temp = [];\n        snapshot.forEach((song) => temp.push(song.data()));\n        setSongs(sortSongs(temp));\n        setLoading(false);\n        setForceUpdate(!forceUpdate);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem loading the songs.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  useEffect(() => {\n    document.title = \"Music | COVinfo\";\n    loadSongs();\n  }, []);\n\n  let changeSortType = async (type) => {\n    if (sortType !== type) {\n      setSortType(type);\n      setSongs(sortSongs(songs, type));\n      setForceUpdate(!forceUpdate);\n      addToast(`Filtering by ${type}.`, {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let sortSongs = (sngs, type = sortType) => {\n    switch (type) {\n      case \"recent\":\n        sngs.sort((a, b) => {\n          return moment(b.created_at) - moment(a.created_at);\n        });\n        break;\n      default:\n        sngs.sort((a, b) => b.upvotes.length - a.upvotes.length);\n        break;\n    }\n    return sngs;\n  };\n\n  let addSong = () => {\n    if (selectedSong !== null) {\n      let newSong = {\n        url: `https://youtube.com/watch?v=${selectedSong.id.videoId}`,\n        title: selectedSong.snippet.title,\n        seconds: parseTimestamp(),\n        created_at: moment().toISOString(),\n        upvotes: [],\n        user: props.user,\n        song_id: \"\",\n      };\n      firebase\n        .firestore()\n        .collection(\"songs\")\n        .add(newSong)\n        .then((docRef) => {\n          firebase\n            .firestore()\n            .collection(\"songs\")\n            .doc(docRef.id)\n            .update({ song_id: docRef.id })\n            .then(() => {\n              let temp = songs;\n              temp.push({ ...newSong, song_id: docRef.id });\n              setSongs(sortSongs(temp));\n              setSearchTerm(\"\");\n              closeAddSongModal();\n              addToast(\"Song added.\", {\n                appearance: \"success\",\n                autoDismiss: true,\n              });\n            })\n            .catch((e) => {\n              console.log(e);\n              addToast(\"There was a problem adding the song.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem adding the song.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  let _handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchForSong();\n    }\n  };\n\n  let searchForSong = () => {\n    if (searchTerm.trim() !== \"\") {\n      searchYoutube(searchTerm)\n        .then((songs) => {\n          setSearchedSongs(songs);\n          setAddSongModalVisible(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem searching YouTube.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    } else {\n      setSearchedSongs([]);\n    }\n  };\n\n  let parseTimestamp = () => {\n    let durs = timestamp.split(\":\");\n    let hours = parseInt(durs[0]);\n    let minutes = parseInt(durs[1]);\n    let seconds = parseInt(durs[2]);\n    return (\n      moment.duration(hours, \"hours\").asSeconds() +\n      moment.duration(minutes, \"minutes\").asSeconds() +\n      seconds\n    );\n  };\n\n  let decodeHtmlEntity = (str) => {\n    return str.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  let closeAddSongModal = () => {\n    setAddSongModalVisible(false);\n    setTimestamp(\"00:00:00\");\n    setSelectedSong(null);\n    setSearchedSongs([]);\n  };\n\n  let toggleUpvote = (song_id) => {\n    let index = songs.findIndex((s) => s.song_id === song_id);\n    let upvotes = songs[index].upvotes;\n    if (upvotes.includes(props.user.user_id)) {\n      upvotes = upvotes.filter((user_id) => user_id !== props.user.user_id);\n    } else {\n      upvotes.push(props.user.user_id);\n    }\n    let temp = songs;\n    temp[index] = { ...temp[index], upvotes };\n    firebase\n      .firestore()\n      .collection(\"songs\")\n      .doc(song_id)\n      .update({ upvotes })\n      .then(() => {\n        setSongs(sortSongs(temp));\n        setForceUpdate(!forceUpdate);\n        addToast(\"Upvote toggled.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem toggling the upvote.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let deleteSong = (song_id) => {\n    if (window.confirm(\"Are you sure you want to delete that song?\")) {\n      firebase\n        .firestore()\n        .collection(\"songs\")\n        .doc(song_id)\n        .delete()\n        .then(() => {\n          setSongs(sortSongs(songs.filter((song) => song.song_id !== song_id)));\n          setForceUpdate(!forceUpdate);\n          addToast(\"The song was deleted.\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem deleting the song.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\">\n      <Modal show={addSongModalVisible} onHide={closeAddSongModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Suggest A Song</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            {searchedSongs.map((song) => (\n              <button\n                className={`w-100 border-0 ${\n                  selectedSong\n                    ? song.id.videoId === selectedSong.id.videoId\n                      ? \"border-info\"\n                      : \"bg-transparent\"\n                    : \"bg-transparent\"\n                }`}\n                onClick={() => setSelectedSong(song)}\n              >\n                <div className=\"d-flex flex flex-row align-items-center my-2\">\n                  <img\n                    src={song.snippet.thumbnails.default.url}\n                    width={song.snippet.thumbnails.default.width * (2 / 3)}\n                    height={song.snippet.thumbnails.default.height * (2 / 3)}\n                    alt={\"thumbnail\"}\n                  />\n                  <div className=\"ml-2 text-left\">\n                    <h5 className=\"mb-0 text-dark\">\n                      {decodeHtmlEntity(song.snippet.title)}\n                    </h5>\n                    <span className=\"ml-2 h6 text-black-50\">\n                      {song.snippet.channelTitle} ·\n                      {moment(song.snippet.publishedAt).fromNow()}\n                    </span>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n          <Form.Group>\n            <Form.Label>Timestamp</Form.Label>\n            <InputMask\n              mask={\"99:99:99\"}\n              defaultValue={timestamp}\n              onChange={(e) => setTimestamp(e.target.value)}\n            >\n              {(inputProps) => <Form.Control type={\"text\"} {...inputProps} />}\n            </InputMask>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            className=\"d-flex flex-row align-items-center\"\n            onClick={addSong}\n          >\n            <UploadCloud className=\"mr-1\" /> Suggest Song\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"w-100 px-3 mt-3\">\n        <h3>Hand Washing Music</h3>\n        <div className=\"w-100 d-flex flex-row rounded-pill messageInputContainer\">\n          <input\n            type={\"text\"}\n            className=\"flex bg-transparent border-0 py-2 px-3 messageInput\"\n            placeholder={\n              props.authed\n                ? \"Add song from YouTube...\"\n                : \"Login to enable adding songs...\"\n            }\n            onChange={(e) => setSearchTerm(e.target.value)}\n            disabled={!props.authed}\n            onKeyDown={_handleKeyPress}\n            value={searchTerm}\n          />\n          {searchTerm.trim() !== \"\" ? (\n            <button\n              className=\"bg-primary border-0 d-flex align-items-center justify-content-center pl-3 pr-4\"\n              style={{\n                borderTopRightRadius: 100,\n                borderBottomRightRadius: 100,\n              }}\n              onClick={searchForSong}\n            >\n              <Search color={\"white\"} />\n            </button>\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n      {loading ? (\n        <div className=\"d-flex align-items-center justify-content-center w-100 flex\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : (\n        <div className=\"h-100 p-3\">\n          <Dropdown className=\"mb-3 d-flex justify-content-end\">\n            <Dropdown.Toggle variant=\"light\">\n              Filter <Filter />\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() => changeSortType(\"popular\")}\n                style={{\n                  backgroundColor:\n                    sortType === \"popular\" ? \"lightgray\" : \"white\",\n                }}\n              >\n                <div className=\"d-flex flex-row align-items-center\">\n                  <span className=\"flex\">Popular</span> <ThumbsUp />\n                </div>\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => changeSortType(\"recent\")}\n                style={{\n                  backgroundColor:\n                    sortType === \"recent\" ? \"lightgray\" : \"white\",\n                }}\n              >\n                <div className=\"d-flex flex-row align-items-center\">\n                  <span className=\"flex\">Recent</span> <Clock />\n                </div>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Scrollbars\n            hideTracksWhenNotNeeded\n            renderView={(props) => <div {...props} />}\n          >\n            {songs.map((song) => (\n              <div\n                className=\"border d-inline-block m-1\"\n                style={{ borderRadius: 10, borderColor: \"lightgray\" }}\n                key={song.song_id}\n              >\n                <ReactPlayer\n                  url={`${song.url}&t=${song.seconds}`}\n                  controls={false}\n                  className=\"m-2\"\n                  width={640 * (2 / 3) - 30}\n                  height={360 * (2 / 3) - 30}\n                />\n                <div\n                  style={{\n                    height: 1,\n                    width: \"100%\",\n                    backgroundColor: \"lightgray\",\n                  }}\n                />\n                <div className=\"p-2 d-flex flex-row align-items-center\">\n                  <div className=\"flex\">\n                    <span>Submitted by: </span>\n                    <span style={{ color: `#${song.user.username_color}` }}>\n                      {song.user.username}\n                    </span>\n                    <ReactCountryFlag\n                      countryCode={song.user.country}\n                      className=\"ml-1\"\n                    />\n                  </div>\n                  <div className=\"d-flex flex-row align-items-center\">\n                    {props.authed && props.user.type === \"admin\" ? (\n                      <button\n                        className=\"bg-transparent border-0\"\n                        onClick={() => deleteSong(song.song_id)}\n                      >\n                        <Trash className=\"text-danger\" />\n                      </button>\n                    ) : null}\n                    <span>({song.upvotes.length})</span>\n                    <button\n                      className=\"bg-transparent border-0\"\n                      onClick={() => toggleUpvote(song.song_id)}\n                      disabled={!props.authed}\n                      title={!props.authed ? \"Login to enable upvoting\" : null}\n                    >\n                      <ThumbsUp\n                        color={\n                          props.authed &&\n                          song.upvotes.includes(props.user.user_id)\n                            ? \"gold\"\n                            : \"black\"\n                        }\n                      />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </Scrollbars>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Music);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport firebase from \"firebase\";\nimport moment from \"moment\";\nimport {\n  ThumbsUp,\n  UploadCloud,\n  Filter,\n  Image,\n  Clock,\n  Trash,\n} from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, Dropdown, ProgressBar } from \"react-bootstrap\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Dropzone from \"react-dropzone\";\nimport Masonry from \"react-masonry-component\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\n\nfunction Memes(props) {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const [addMemeModalVisible, setAddMemeModalVisible] = useState(false);\n  const [uploadingImage, setUploadingImage] = useState(<Image size={100} />);\n  const [deleteHovered, setDeleteHovered] = useState(false);\n  const [memeToUpload, setMemeToUpload] = useState(null);\n  const [sortType, setSortType] = useState(\"popular\");\n  const [uploadingProgress, setUploadingProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const widthRef = useRef(null);\n  const { addToast } = useToasts();\n\n  let loadMemes = () => {\n    firebase\n      .firestore()\n      .collection(\"memes\")\n      .get()\n      .then((snapshot) => {\n        let temp = [];\n        snapshot.forEach((meme) => temp.push(meme.data()));\n        setMemes(sortMemes(temp));\n        setLoading(false);\n        setForceUpdate(!forceUpdate);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem loading the memes.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  useEffect(() => {\n    loadMemes();\n  }, []);\n\n  let changeSortType = async (type) => {\n    if (sortType !== type) {\n      setSortType(type);\n      setMemes(sortMemes(memes, type));\n      setForceUpdate(!forceUpdate);\n      addToast(`Filtering by ${type}.`, {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let sortMemes = (mms, type = sortType) => {\n    switch (type) {\n      case \"recent\":\n        mms.sort((a, b) => {\n          return moment(b.created_at) - moment(a.created_at);\n        });\n        break;\n      default:\n        mms.sort((a, b) => b.upvotes.length - a.upvotes.length);\n        break;\n    }\n    return mms;\n  };\n\n  let addMeme = () => {\n    if (memeToUpload) {\n      setUploading(true);\n      let newMeme = {\n        url: \"\",\n        created_at: \"\",\n        upvotes: [],\n        user: props.user,\n        meme_id: \"\",\n      };\n      firebase\n        .firestore()\n        .collection(\"memes\")\n        .add(newMeme)\n        .then((docRef) => {\n          newMeme.meme_id = docRef.id;\n          let uploadTask = firebase\n            .storage()\n            .ref(`images/${newMeme.meme_id}`)\n            .put(memeToUpload);\n          uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n              const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n              );\n              setUploadingProgress(progress);\n            },\n            (e) => {\n              console.log(e);\n              addToast(\"There was a problem adding the meme.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            },\n            () => {\n              firebase\n                .storage()\n                .ref(\"images\")\n                .child(newMeme.meme_id)\n                .getDownloadURL()\n                .then((url) => {\n                  newMeme.url = url;\n                  newMeme.created_at = moment().toISOString();\n                  firebase\n                    .firestore()\n                    .collection(\"memes\")\n                    .doc(newMeme.meme_id)\n                    .update(newMeme)\n                    .then(() => {\n                      let temp = memes;\n                      temp.push(newMeme);\n                      setMemes(sortMemes(temp));\n                      setUploading(false);\n                      closeAddMemeModal();\n                      addToast(\"Meme added.\", {\n                        appearance: \"success\",\n                        autoDismiss: true,\n                      });\n                    })\n                    .catch((e) => {\n                      console.log(e);\n                      addToast(\"There was a problem adding the meme.\", {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                    });\n                })\n                .catch((e) => {\n                  console.log(e);\n                  addToast(\"There was a problem adding the meme.\", {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                });\n            }\n          );\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem adding the meme.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  let closeAddMemeModal = () => {\n    setAddMemeModalVisible(false);\n    setMemeToUpload(null);\n  };\n\n  let toggleUpvote = (meme_id) => {\n    let index = memes.findIndex((meme) => meme.meme_id === meme_id);\n    let upvotes = memes[index].upvotes;\n    if (upvotes.includes(props.user.user_id)) {\n      upvotes = upvotes.filter((user_id) => user_id !== props.user.user_id);\n    } else {\n      upvotes.push(props.user.user_id);\n    }\n    let temp = memes;\n    temp[index] = { ...temp[index], upvotes };\n    firebase\n      .firestore()\n      .collection(\"memes\")\n      .doc(meme_id)\n      .update({ upvotes })\n      .then(() => {\n        setMemes(sortMemes(temp));\n        setForceUpdate(!forceUpdate);\n        addToast(\"Upvote toggled.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem toggling the upvote.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let deleteMeme = (meme_id) => {\n    if (window.confirm(\"Are you sure you want to delete that meme?\")) {\n      firebase\n        .firestore()\n        .collection(\"memes\")\n        .doc(meme_id)\n        .delete()\n        .then(() => {\n          firebase\n            .storage()\n            .ref(`images/${meme_id}`)\n            .delete()\n            .then(() => {\n              setMemes(\n                sortMemes(memes.filter((meme) => meme.meme_id !== meme_id))\n              );\n              setForceUpdate(!forceUpdate);\n              addToast(\"The meme was deleted.\", {\n                appearance: \"success\",\n                autoDismiss: true,\n              });\n            })\n            .catch((e) => {\n              console.log(e);\n              addToast(\"There was a problem deleting the meme.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem deleting the meme.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\" ref={widthRef}>\n      <Modal show={addMemeModalVisible} onHide={closeAddMemeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload a Meme</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"d-flex flex-column align-items-center\">\n          {memeToUpload ? (\n            <button\n              className=\"bg-transparent border-0 position-relative\"\n              onMouseEnter={() => setDeleteHovered(true)}\n              onMouseLeave={() => setDeleteHovered(false)}\n              onClick={() => setMemeToUpload(null)}\n            >\n              <img\n                src={URL.createObjectURL(memeToUpload)}\n                alt={\"memeToUpload\"}\n                style={{ borderRadius: 5 }}\n              />\n              {deleteHovered ? (\n                <div\n                  className=\"position-absolute d-flex flex-row align-items-center justify-content-center\"\n                  style={{\n                    left: 0,\n                    top: 0,\n                    bottom: 0,\n                    right: 0,\n                    backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n                  }}\n                >\n                  <Trash className=\"text-danger\" size={50} />\n                </div>\n              ) : (\n                <div />\n              )}\n            </button>\n          ) : (\n            <Dropzone\n              onDrop={(acceptedFiles) => setMemeToUpload(acceptedFiles[0])}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div\n                    {...getRootProps({\n                      className: \"dropzone\",\n                      onMouseEnter: () =>\n                        setUploadingImage(<UploadCloud size={100} />),\n                      onMouseLeave: () =>\n                        setUploadingImage(<Image size={100} />),\n                    })}\n                  >\n                    <input\n                      {...getInputProps({\n                        multiple: false,\n                        accept: \"image/png, image/jpeg, image/gif\",\n                      })}\n                    />\n                    {uploadingImage}\n                    <span>\n                      Drag 'n' drop some files here, or click to select files\n                    </span>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          )}\n          {uploading ? (\n            <ProgressBar\n              now={uploadingProgress}\n              label={`${uploadingProgress}%`}\n              className=\"w-100 mt-2\"\n            />\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            className=\"d-flex flex-row align-items-center\"\n            onClick={addMeme}\n          >\n            <UploadCloud className=\"mr-1\" /> Upload Meme\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <h3 className=\"px-3 pt-3\">Coronavirus Memes</h3>\n      <div className=\"d-flex flex-row align-items-center justify-content-between mb-3 px-3\">\n        <Button\n          variant=\"success\"\n          onClick={() => setAddMemeModalVisible(true)}\n          disabled={!props.authed}\n        >\n          {props.authed ? \"+ Add Meme\" : \"Login to add memes\"}\n        </Button>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"light\">\n            Filter <Filter />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => changeSortType(\"popular\")}\n              style={{\n                backgroundColor: sortType === \"popular\" ? \"lightgray\" : \"white\",\n              }}\n            >\n              <div className=\"d-flex flex-row align-items-center\">\n                <span className=\"flex\">Popular</span> <ThumbsUp />\n              </div>\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => changeSortType(\"recent\")}\n              style={{\n                backgroundColor: sortType === \"recent\" ? \"lightgray\" : \"white\",\n              }}\n            >\n              <div className=\"d-flex flex-row align-items-center\">\n                <span className=\"flex\">Recent</span> <Clock />\n              </div>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n      {loading ? (\n        <div className=\"d-flex align-items-center justify-content-center w-100 flex\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : (\n        <div className=\"flex p-3\">\n          <Scrollbars\n            hideTracksWhenNotNeeded\n            renderView={(props) => <div {...props} />}\n          >\n            <Masonry className=\"pb-5\">\n              {memes.map((meme) => (\n                <div\n                  className=\"border d-inline-block m-1\"\n                  style={{\n                    borderRadius: 10,\n                    borderColor: \"lightgray\",\n                    width: widthRef.current\n                      ? widthRef.current.offsetWidth / 4 + 30\n                      : 0,\n                  }}\n                  key={meme.meme_id}\n                >\n                  <img\n                    src={meme.url}\n                    alt={meme.meme_id}\n                    className=\"w-100 p-2\"\n                  />\n                  <div\n                    style={{\n                      height: 1,\n                      width: \"100%\",\n                      backgroundColor: \"lightgray\",\n                    }}\n                  />\n                  <div className=\"p-2 d-flex flex-row align-items-center\">\n                    <div className=\"flex\">\n                      <span>Submitted by: </span>\n                      <span style={{ color: `#${meme.user.username_color}` }}>\n                        {meme.user.username}\n                      </span>\n                      <ReactCountryFlag\n                        countryCode={meme.user.country}\n                        className=\"ml-1\"\n                      />\n                    </div>\n                    <div className=\"d-flex flex-row align-items-center\">\n                      {props.authed && props.user.type === \"admin\" ? (\n                        <button\n                          className=\"bg-transparent border-0\"\n                          onClick={() => deleteMeme(meme.meme_id)}\n                        >\n                          <Trash className=\"text-danger\" />\n                        </button>\n                      ) : null}\n                      <span>({meme.upvotes.length})</span>\n                      <button\n                        className=\"bg-transparent border-0\"\n                        onClick={() => toggleUpvote(meme.meme_id)}\n                        disabled={!props.authed}\n                        title={\n                          !props.authed ? \"Login to enable upvoting\" : null\n                        }\n                      >\n                        <ThumbsUp\n                          color={\n                            props.authed &&\n                            meme.upvotes.includes(props.user.user_id)\n                              ? \"gold\"\n                              : \"black\"\n                          }\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </Masonry>\n          </Scrollbars>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Memes);\n","import React from \"react\";\nimport Navbar from \"./components/navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Map from \"./components/map\";\nimport News from \"./components/news\";\nimport Chat from \"./components/chat\";\nimport Login from \"./components/login\";\nimport { Provider } from \"react-redux\";\nimport rootStore from \"./stores/rootStore\";\nimport Register from \"./components/register\";\nimport Settings from \"./components/settings\";\nimport Music from \"./components/music\";\nimport Memes from \"./components/memes\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\nfunction App() {\n  return (\n    <Provider store={rootStore}>\n      <ToastProvider autoDismissTimeout={3000}>\n        <Router>\n          <div className=\"d-flex flex-row h-100\">\n            <Navbar />\n            <Switch>\n              <Route path=\"/map\">\n                <Map />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"/music\">\n                <Music />\n              </Route>\n              <Route path=\"/memes\">\n                <Memes />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/settings\">\n                <Settings />\n              </Route>\n              <Route path=\"/\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </ToastProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Geocode from \"react-geocode\";\nimport { initFirebase } from \"./utils/firebaseHandler\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\n\ninitFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import firebase from \"firebase/app\";\nimport rootStore from \"../stores/rootStore\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/analytics\";\nimport \"firebase/performance\";\n\nlet initFirebase = () => {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  });\n  firebase.analytics();\n  firebase.performance();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(user.uid)\n        .get()\n        .then((userData) => {\n          rootStore.dispatch({\n            type: \"UPDATE_USER\",\n            user: userData.data(),\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    } else {\n      rootStore.dispatch({\n        type: \"CLEAR_USER\",\n      });\n    }\n  });\n};\n\nexport { initFirebase };\n"],"sourceRoot":""}