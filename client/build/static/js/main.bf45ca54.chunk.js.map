{"version":3,"sources":["components/logo.js","components/navbar.js","components/map.js","components/newsStory.js","components/news.js","components/chatMessage.js","components/chat.js","components/login.js","reducers/rootReducer.js","stores/rootStore.js","components/register.js","components/settings.js","utils/youtubeHandler.js","components/music.js","components/memes.js","App.js","serviceWorker.js","utils/firebaseHandler.js","index.js"],"names":["Logo","style","color","className","size","version","viewBox","xmlns","fill","height","width","d","x","y","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","connect","state","ownProps","user","authed","withRouter","props","useState","aboutModalShown","setAboutModalShown","open","setOpen","isSmallDevice","useMediaQuery","query","useEffect","history","listen","_renderNavbar","Navbar","bg","Brand","onClick","Collapse","id","Nav","to","exact","activeClassName","_renderAboutModal","Modal","show","onHide","Header","closeButton","Title","Body","href","target","rel","isOpen","from","onRequestClose","overlayClassName","closeIcon","zIndex","backgroundColor","display","flexDirection","alignItems","justifyContent","Button","marginBottom","border","borderColor","padding","dataLayer","type","paint","property","stops","numberWithCommas","toString","replace","latitude","longitude","zoom","viewport","setViewport","geoData","setGeoData","hoveredFeature","setHoveredFeature","loading","setLoading","addToast","useToasts","window","onresize","getInitialMapData","useCallback","fetch","then","response","json","geoJson","coronaJson","message","appearance","autoDismiss","forEach","country","currFeature","features","find","feature","properties","ISO_A3","countryInfo","iso3","cases","deaths","recovered","casesToday","todayCases","tests","iso2","lat","long","setTimeout","catch","e","console","log","document","title","flex","position","mapboxApiAccessToken","onViewportChange","mapStyle","onHover","event","hovered","f","layer","data","ADMIN","countryCode","undefined","fontSize","NewsStory","article","borderRadius","url","src","urlToImage","objectFit","alt","overflowWrap","source","name","author","trim","moment","publishedAt","fromNow","articles","global","setGlobal","local","setLocal","setAuthed","handleGetNews","term","Promise","res","rej","getName","usr","getLocalNews","Tabs","defaultActiveKey","Tab","eventKey","renderView","map","key","Math","random","ChatMessage","username_color","username","socket","openSocket","process","setMessage","messages","setMessages","messagesRef","useRef","scrollBar","current","receiveMessage","msg","scrollToBottom","on","off","sendMessage","encodeURI","method","ref","placeholder","onChange","value","onKeyDown","keyCode","disabled","borderTopRightRadius","borderBottomRightRadius","Login","email","setEmail","password","setPassword","useHistory","firebase","auth","signInWithPopup","FacebookAuthProvider","push","GithubAuthProvider","Form","Group","controlId","Label","Control","signInWithEmailAndPassword","initState","rootReducer","action","rootStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","Register","confirmPassword","setConfirmPassword","setUsername","setCountry","countries","getData","createUserData","uid","firestore","collection","doc","set","user_id","as","code","test","String","toLowerCase","createUserWithEmailAndPassword","dispatch","updateUser","setColor","updatedValues","setUpdatedValues","colorPicker","setColorPicker","handleUpdateValue","temp","toggleColorPicker","left","right","top","bottom","cursor","preventDefault","onChangeComplete","hex","split","Object","keys","length","update","signOut","searchYoutube","headers","Accept","items","searchTerm","setSearchTerm","searchedSongs","setSearchedSongs","songs","setSongs","forceUpdate","setForceUpdate","addSongModalVisible","setAddSongModalVisible","selectedSong","setSelectedSong","timestamp","setTimestamp","sortType","setSortType","get","snapshot","song","sortSongs","changeSortType","a","sngs","sort","b","created_at","upvotes","searchForSong","parseTimestamp","durs","hours","parseInt","minutes","seconds","duration","asSeconds","closeAddSongModal","videoId","snippet","thumbnails","default","match","dec","fromCharCode","channelTitle","mask","defaultValue","inputProps","Footer","variant","newSong","toISOString","song_id","add","docRef","Dropdown","Toggle","Menu","Item","hideTracksWhenNotNeeded","paddingRight","controls","confirm","delete","filter","index","findIndex","s","includes","toggleUpvote","memes","setMemes","addMemeModalVisible","setAddMemeModalVisible","uploadingImage","setUploadingImage","deleteHovered","setDeleteHovered","memeToUpload","setMemeToUpload","uploadingProgress","setUploadingProgress","uploading","setUploading","widthRef","meme","sortMemes","mms","closeAddMemeModal","onMouseEnter","onMouseLeave","URL","createObjectURL","onDrop","acceptedFiles","getRootProps","getInputProps","multiple","accept","ProgressBar","now","label","newMeme","meme_id","storage","put","progress","round","bytesTransferred","totalBytes","child","getDownloadURL","breakpointCols","1224","900","700","columnClassName","App","store","autoDismissTimeout","placement","path","Boolean","location","hostname","createBasicUser","userData","displayName","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","performance","onAuthStateChanged","exists","setAppElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bf45ca54.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Logo = ({ style = {}, color = \"black\", className = \"\", size = 100 }) => (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 64 64\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={style}\n    fill={color}\n    className={className}\n    height={size}\n    width={size}\n  >\n    <path d=\" c-1.2-0.8-2.4,0.1-3.2,0.7c-0.1,0.1-0.3,0.2-0.4,0.3c0-0.2,0-0.4,0-0.5c0-0.9-0.1-2.5-1.6-2.9c-1.4-0.3-2.2,1-2.8,1.8  c-0.1,0.1-0.2,0.3-0.3,0.4c-0.1-0.2-0.1-0.3-0.2-0.5c-0.4-0.9-0.9-2.3-2.5-2.2c-1.5,0.2-1.8,1.7-2,2.6c0,0.1-0.1,0.3-0.1,0.5  c-0.1-0.1-0.2-0.3-0.3-0.4c-0.7-0.8-1.7-1.9-3.1-1.3c-1.3,0.7-1.1,2.2-1,3.2c0,0.2,0.1,0.4,0.1,0.6c-0.2-0.1-0.3-0.2-0.5-0.2  c-0.8-0.4-2.3-1.2-3.4-0.1c-1,1.1-0.3,2.4,0.2,3.3c0.1,0.2,0.2,0.5,0.3,0.7c-0.2,0-0.5,0-0.7,0c-1-0.1-2.6-0.2-3.2,1.3  c-0.2,0.5,0,1.1,0.5,1.3c0.5,0.2,1.1,0,1.3-0.5c0.1-0.2,0.8-0.1,1.2-0.1c0.9,0.1,2,0.1,2.6-0.8c0.6-0.9,0.1-2-0.3-2.8  c-0.1-0.3-0.4-0.8-0.4-1c0.2,0,0.7,0.3,1,0.4c0.8,0.4,1.8,0.9,2.7,0.3c0.9-0.6,0.8-1.8,0.6-2.7c0-0.3-0.1-0.8-0.1-1  c0.2,0.2,0.5,0.5,0.7,0.7c0.6,0.7,1.4,1.5,2.4,1.2c1.1-0.3,1.3-1.4,1.5-2.3c0.1-0.3,0.2-0.7,0.2-0.9c0.1,0.2,0.3,0.6,0.4,0.9  c0.3,0.9,0.8,1.9,1.8,2c1.1,0.1,1.7-0.9,2.2-1.6c0.1-0.2,0.4-0.6,0.5-0.8c0.1,0.3,0.1,0.7,0.1,1c0,0.9,0.1,2.1,1.1,2.5  c1,0.5,1.9-0.2,2.6-0.8c0.2-0.2,0.6-0.5,0.8-0.6c0,0.3-0.2,0.7-0.3,1c-0.3,0.9-0.6,2,0.1,2.7c0.8,0.8,1.9,0.5,2.7,0.3  c0.3-0.1,1-0.3,1.1-0.3c0,0.2-0.4,0.7-0.6,1c-0.5,0.7-1.3,1.7-0.8,2.7c0.2,0.4,0.5,0.6,0.9,0.6c0.1,0,0.3,0,0.4-0.1  c0.5-0.2,0.7-0.7,0.5-1.2c0.1-0.2,0.3-0.6,0.5-0.8C46.1,29.1,47,27.9,46.2,26.6z\" />\n    <path d=\"M56.9,42.9c-1.1-0.7-2.5-0.5-3.4,0.3l-2.8-1.6c1-2,1.7-4.1,2.1-6.4l4,0.4l0.2-2l-4-0.4c0-0.4,0.1-0.8,0.1-1.2  s0-0.8-0.1-1.2l4-0.4l-0.2-2l-4,0.4c-0.3-2.3-1.1-4.4-2.1-6.4l2.8-1.6c0.9,0.8,2.3,1,3.4,0.3c1.4-0.8,1.9-2.7,1.1-4.1  s-2.7-1.9-4.1-1.1c-1.1,0.7-1.7,1.9-1.4,3.1l-2.8,1.6c-1.2-1.9-2.8-3.6-4.5-5l2.4-3.3l-1.6-1.2l-2.4,3.3c-0.7-0.4-1.4-0.8-2.1-1.2  l1.6-3.7l-1.8-0.8l-1.6,3.7c-2.1-0.8-4.3-1.3-6.6-1.4V7.8c1.2-0.4,2-1.5,2-2.8c0-1.7-1.3-3-3-3s-3,1.3-3,3c0,1.3,0.8,2.4,2,2.8v3.2  c-2.3,0.1-4.5,0.6-6.6,1.4l-1.6-3.7l-1.8,0.8l1.6,3.7c-0.7,0.4-1.4,0.8-2.1,1.2l-2.4-3.3l-1.6,1.2l2.4,3.3c-1.8,1.4-3.3,3.1-4.5,5  L11.6,19c0.2-1.2-0.3-2.5-1.4-3.1C8.7,15.1,6.8,15.6,6,17s-0.3,3.3,1.1,4.1c1.1,0.7,2.5,0.5,3.4-0.3l2.8,1.6c-1,2-1.7,4.1-2.1,6.4  l-4-0.4l-0.2,2l4,0.4c0,0.4-0.1,0.8-0.1,1.2s0,0.8,0.1,1.2l-4,0.4l0.2,2l4-0.4c0.3,2.3,1.1,4.4,2.1,6.4l-2.8,1.6  c-0.9-0.8-2.3-1-3.4-0.3C5.7,43.7,5.2,45.6,6,47s2.7,1.9,4.1,1.1c1.1-0.7,1.7-1.9,1.4-3.1l2.8-1.6c1.2,1.9,2.8,3.6,4.5,5l-2.4,3.3  l1.6,1.2l2.4-3.3c0.7,0.4,1.4,0.8,2.1,1.2l-1.6,3.7l1.8,0.8l1.6-3.7c2.1,0.8,4.3,1.3,6.6,1.4v3.2c-1.2,0.4-2,1.5-2,2.8  c0,1.7,1.3,3,3,3s3-1.3,3-3c0-1.3-0.8-2.4-2-2.8v-3.2c2.3-0.1,4.5-0.6,6.6-1.4l1.6,3.7l1.8-0.8l-1.6-3.7c0.7-0.4,1.4-0.8,2.1-1.2  l2.4,3.3l1.6-1.2l-2.4-3.3c1.8-1.4,3.3-3.1,4.5-5l2.8,1.6c-0.2,1.2,0.3,2.5,1.4,3.1c1.4,0.8,3.3,0.3,4.1-1.1S58.3,43.7,56.9,42.9z   M44,46.8l-1.2-1.6l-1.6,1.2l1.2,1.6c-0.6,0.4-1.1,0.7-1.7,1l-0.8-1.8L38,47.9l0.8,1.8C37,50.4,35,50.8,33,50.9V49h-2v1.9  c-2-0.1-4-0.5-5.8-1.2l0.8-1.8l-1.8-0.8l-0.8,1.8c-0.6-0.3-1.2-0.6-1.7-1l1.2-1.6l-1.6-1.2L20,46.8c-1.5-1.3-2.9-2.7-4-4.4l1.7-1  l-1-1.7l-1.7,1c-0.9-1.7-1.5-3.6-1.8-5.6l1.9-0.2l-0.2-2L13.1,33c0-0.3-0.1-0.7-0.1-1s0-0.7,0.1-1l1.9,0.2l0.2-2L13.3,29  c0.3-2,0.9-3.9,1.8-5.6l1.7,1l1-1.7l-1.7-1c1.1-1.7,2.4-3.2,4-4.4l1.2,1.6l1.6-1.2l-1.2-1.6c0.6-0.4,1.1-0.7,1.7-1l0.8,1.8l1.8-0.8  l-0.8-1.8c1.8-0.7,3.8-1.1,5.8-1.2V15h2v-1.9c2,0.1,4,0.5,5.8,1.2L38,16.1l1.8,0.8l0.8-1.8c0.6,0.3,1.2,0.6,1.7,1l-1.2,1.6l1.6,1.2  l1.2-1.6c1.5,1.3,2.9,2.7,4,4.4l-1.7,1l1,1.7l1.7-1c0.9,1.7,1.5,3.6,1.8,5.6l-1.9,0.2l0.2,2l1.9-0.2c0,0.3,0.1,0.7,0.1,1  s0,0.7-0.1,1L49,32.8l-0.2,2l1.9,0.2c-0.3,2-0.9,3.9-1.8,5.6l-1.7-1l-1,1.7l1.7,1C46.8,44,45.5,45.5,44,46.8z\" />\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"50%\"\n      height=\"50%\"\n      x=\"25%\"\n      y=\"25%\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\" />\n      <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\" />\n    </svg>\n  </svg>\n);\n\nexport default Logo;\n","import React, { useEffect, useState } from \"react\";\nimport { Navbar, Nav, Modal, Button } from \"react-bootstrap\";\nimport {\n  MessageSquare,\n  Globe,\n  FileText,\n  Music,\n  Image,\n  Settings,\n  LogIn,\n  Menu,\n  X,\n} from \"react-feather\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Logo from \"./logo\";\nimport { useMediaQuery } from \"react-responsive\";\nimport SlidingPane from \"react-sliding-pane\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction NavBar(props) {\n  const [aboutModalShown, setAboutModalShown] = useState(false);\n  const [open, setOpen] = useState(false);\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n\n  useEffect(() => {\n    if (isSmallDevice) {\n      return props.history.listen(() => {\n        setOpen(false);\n      });\n    }\n  });\n\n  let _renderNavbar = () => (\n    <>\n      <Navbar bg=\"dark\" className=\"flex-column p-0\">\n        {isSmallDevice ? null : (\n          <Navbar.Brand\n            className=\"mr-0 text-white h6 px-3 d-flex flex-column align-items-center bg-transparent border-0 hover-spinner cursor-pointer\"\n            onClick={() => setAboutModalShown(true)}\n          >\n            <Logo color={\"lime\"} size={50} />\n            COVinfo\n          </Navbar.Brand>\n        )}\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"flex-column w-100\">\n          <Nav className=\"flex-column w-100 flex\">\n            <NavLink\n              to={\"/\"}\n              exact\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <FileText size={35} />\n            </NavLink>\n            <NavLink\n              to={\"/map\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <Globe size={35} />\n            </NavLink>\n            <NavLink\n              to={\"/chat\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <MessageSquare size={35} />\n            </NavLink>\n            <NavLink\n              to={\"/music\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <Music size={35} />\n            </NavLink>\n            <NavLink\n              to={\"/memes\"}\n              activeClassName={\"current\"}\n              className=\"text-center py-3 w-100 nav-item\"\n            >\n              <Image size={35} />\n            </NavLink>\n            <div className=\"flex\" />\n            {props.authed ? (\n              <NavLink\n                to={\"/settings\"}\n                activeClassName={\"current\"}\n                className=\"text-center py-3 w-100 nav-item\"\n              >\n                <Settings size={35} />\n              </NavLink>\n            ) : (\n              <NavLink\n                to={\"/login\"}\n                activeClassName={\"current\"}\n                className=\"text-center py-3 w-100 nav-item\"\n              >\n                <LogIn size={35} />\n              </NavLink>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n\n  let _renderAboutModal = () => (\n    <Modal show={aboutModalShown} onHide={() => setAboutModalShown(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>About COVinfo</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        COVinfo was designed and built during the 2020 Corona pandemic and an\n        entry in{\" \"}\n        <a\n          href=\"https://hackquarantine.devpost.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Hack Quarantine\n        </a>\n        . The goal of COVinfo is to provide a one-stop-shop dashboard for\n        important information regarding Corona, whether that includes up-to-date\n        news, globally and locally, a visual representation of the global spread\n        of Corona, or some materials to keep you distracted and staying healthy\n        during these difficult times. COVinfo was built by{\" \"}\n        <a\n          href=\"https://ngregrichardson.dev\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Noah Richardson\n        </a>{\" \"}\n        and{\" \"}\n        <a\n          href=\"http://mayajohn.info\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Maya John\n        </a>{\" \"}\n        and is completely open sourced on{\" \"}\n        <a\n          href=\"https://github.com/ngregrichardson/COVinfo\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </a>\n        .\n      </Modal.Body>\n      <Modal.Body>\n        <strong>Built with:</strong>\n        <br />\n        Front-End:{\" \"}\n        <a\n          href=\"https://reactjs.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          React\n        </a>\n        <br />\n        Back-End:{\" \"}\n        <a\n          href=\"https://expressjs.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Express\n        </a>\n        <br />\n        Maps:{\" \"}\n        <a\n          href=\"https://www.mapbox.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Mapbox\n        </a>\n        <br />\n        Data Sources:{\" \"}\n        <a\n          href=\"https://newsapi.org/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          News API\n        </a>\n        ,{\" \"}\n        <a\n          href=\"https://corona.lmao.ninja/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          NovelCOVID\n        </a>\n        ,{\" \"}\n        <a\n          href=\"https://datahub.io/core/geo-countries\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          DataHub\n        </a>\n      </Modal.Body>\n    </Modal>\n  );\n\n  let _renderToggle = () => (\n    <Button\n      className=\"align-self-start ml-2 mt-2\"\n      style={{\n        zIndex: 50,\n        marginBottom: open ? 12 : 8,\n        border: open ? \"none\" : \"solid 2px rgba(255, 255, 255, 0.5)\",\n        backgroundColor: \"transparent\",\n      }}\n      onClick={() => setOpen(!open)}\n    >\n      {open ? (\n        <X className=\"text-white-50\" />\n      ) : (\n        <Menu className=\"text-white-50\" />\n      )}\n    </Button>\n  );\n\n  return isSmallDevice ? (\n    <>\n      <SlidingPane\n        isOpen={open}\n        from={\"left\"}\n        width={\"25%\"}\n        onRequestClose={() => setOpen(!open)}\n        className=\"bg-dark navbarZIndex\"\n        overlayClassName=\"navbarOverlayZIndex\"\n        closeIcon={<div />}\n      >\n        {_renderNavbar()}\n      </SlidingPane>\n      <div\n        style={{\n          zIndex: 50,\n          backgroundColor: \"#343a40\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {_renderToggle()}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n          className=\"mr-2\"\n        >\n          <h3 className=\"text-white mb-0 mr-1\">COVinfo</h3>\n          <Button\n            style={{\n              backgroundColor: \"transparent\",\n              borderColor: \"transparent\",\n              padding: 0,\n            }}\n            onClick={() => setAboutModalShown(true)}\n          >\n            <Logo color={\"lime\"} size={45} />\n          </Button>\n        </div>\n      </div>\n      {_renderAboutModal()}\n    </>\n  ) : (\n    <>\n      {_renderNavbar()}\n      {_renderAboutModal()}\n    </>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(withRouter(NavBar));\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport ReactMapGl, { Source, Layer } from \"react-map-gl\";\nimport { connect } from \"react-redux\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst dataLayer = {\n  id: \"data\",\n  type: \"fill\",\n  paint: {\n    \"fill-color\": {\n      property: \"cases\",\n      stops: [\n        [0, \"#abdda4\"],\n        [10, \"#e6f598\"],\n        [100, \"#ffffbf\"],\n        [1000, \"#fee08b\"],\n        [10000, \"#fdae61\"],\n        [100000, \"#f46d43\"],\n        [1000000, \"#d53e4f\"],\n      ],\n    },\n    \"fill-opacity\": 0.8,\n  },\n};\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction Map(props) {\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 39.9526,\n    longitude: -75.1652,\n    zoom: 5,\n  });\n  const [geoData, setGeoData] = useState(null);\n  const [hoveredFeature, setHoveredFeature] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const { addToast } = useToasts();\n\n  let _onHover = (event) => {\n    const { features } = event;\n    const hovered = features && features.find((f) => f.layer.id === \"data\");\n    setHoveredFeature(hovered);\n  };\n\n  window.onresize = () => {\n    setViewport({ ...viewport, width: \"100%\", height: \"100%\" });\n  };\n\n  let _renderTooltip = () => {\n    return hoveredFeature ? (\n      <div className={isSmallDevice ? \"small-map-tooltip\" : \"map-tooltip\"}>\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"font-weight-bold\">\n            {hoveredFeature.properties.ADMIN}\n          </div>\n          {hoveredFeature.properties.iso2 ? (\n            <ReactCountryFlag\n              countryCode={hoveredFeature.properties.iso2}\n              className=\"ml-1\"\n            />\n          ) : null}\n        </div>\n        <div style={{ width: \"100%\", height: 1, backgroundColor: \"#fff\" }} />\n        {hoveredFeature.properties.cases !== undefined ? (\n          <div>\n            Total Cases: {numberWithCommas(hoveredFeature.properties.cases)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.deaths !== undefined ? (\n          <div>\n            Deaths: {numberWithCommas(hoveredFeature.properties.deaths)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.recovered !== undefined ? (\n          <div>\n            Recoveries: {numberWithCommas(hoveredFeature.properties.recovered)}\n          </div>\n        ) : null}\n        {hoveredFeature.properties.tests !== undefined ? (\n          <div>Tests: {numberWithCommas(hoveredFeature.properties.tests)}</div>\n        ) : null}\n        {hoveredFeature.properties.casesToday === undefined ||\n        hoveredFeature.properties.casesToday === 0 ? null : (\n          <div>\n            Cases Today:{\" \"}\n            {numberWithCommas(hoveredFeature.properties.casesToday)}\n          </div>\n        )}\n        <div style={{ color: \"gray\", fontSize: \"0.8em\" }}>\n          Data Provided by{\" \"}\n          <a\n            href=\"https://github.com/NovelCOVID/API\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NovelCOVID\n          </a>\n        </div>\n      </div>\n    ) : null;\n  };\n\n  let getInitialMapData = useCallback(() => {\n    fetch(\"https://covinfo.tech/mapData\")\n      .then((response) => response.json())\n      .then(({ geoJson, coronaJson }) => {\n        if (!coronaJson.message) {\n          coronaJson.forEach((country) => {\n            let currFeature = geoJson.features.find(\n              (feature) =>\n                feature.properties.ISO_A3 === country.countryInfo.iso3\n            );\n            if (currFeature) {\n              currFeature.properties = {\n                ...currFeature.properties,\n                cases: country.cases,\n                deaths: country.deaths,\n                recovered: country.recovered,\n                casesToday: country.todayCases,\n                tests: country.tests,\n                iso2: country.countryInfo.iso2,\n              };\n              if (props.authed && props.user) {\n                if (\n                  props.user.country === country.countryInfo.iso2 ||\n                  props.user.country === country.countryInfo.iso3\n                ) {\n                  setViewport({\n                    ...viewport,\n                    latitude: country.countryInfo.lat,\n                    longitude: country.countryInfo.long,\n                  });\n                }\n              }\n            }\n          });\n          setGeoData(geoJson);\n          setTimeout(() => setLoading(false), 1000);\n        } else {\n          setLoading(false);\n          addToast(\"There was a problem loading the data\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n        addToast(\"There was a problem loading the data\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  }, [addToast, props.authed, props.user]);\n\n  useEffect(() => {\n    document.title = \"Map | COVinfo\";\n    getInitialMapData();\n  }, [getInitialMapData]);\n\n  return (\n    <div style={{ flex: 1, position: \"relative\" }}>\n      {loading ? (\n        <div className=\"map-loading\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : null}\n      <ReactMapGl\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoibmdyZWdyaWNoYXJkc29uIiwiYSI6ImNrOHY0dGdsdjA2NjYzZnNmMWVzZW53OGQifQ.OLl9xQNCBOTHwVRlz-06lA\"\n        }\n        {...viewport}\n        onViewportChange={setViewport}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onHover={_onHover}\n      >\n        <Source type=\"geojson\" data={geoData}>\n          <Layer {...dataLayer} />\n        </Source>\n        {_renderTooltip()}\n      </ReactMapGl>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Map);\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction NewsStory(props) {\n  const [article] = useState(props.article);\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n\n  let openArticleLink = () => {\n    window.open(article.url, \"_blank\");\n  };\n\n  return (\n    <button\n      className=\"p-2 text-white d-flex flex-row align-items-center mb-3 text-left w-100 bg-transparent border newsStory\"\n      style={{ borderRadius: 10, borderColor: \"lightgray\" }}\n      onClick={openArticleLink}\n    >\n      <img\n        src={\n          article.urlToImage ||\n          \"https://designshack.net/wp-content/uploads/placeholder-image.png\"\n        }\n        width={70}\n        height={70}\n        style={{ borderRadius: 5, objectFit: \"cover\" }}\n        alt={\"article_img\"}\n      />\n      <div className=\"d-flex flex-column justify-content-center ml-3\">\n        <h5 className={isSmallDevice ? \"mb-0 text-dark h6\" : \"mb-0 text-dark\"}>\n          {article.title}\n        </h5>\n        <span\n          className=\"pl-2 h6 text-black-50\"\n          style={{ overflowWrap: \"anywhere\" }}\n        >\n          {article.source.name} ·\n          {!isSmallDevice\n            ? article.author && article.author.trim() !== \"\"\n              ? ` ${article.author} · `\n              : \" \"\n            : \" \"}\n          {moment(article.publishedAt).fromNow()}\n        </span>\n      </div>\n    </button>\n  );\n}\n\nexport default NewsStory;\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport NewsStory from \"./newsStory\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { connect } from \"react-redux\";\nimport { getName } from \"country-list\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Tab, Tabs } from \"react-bootstrap\";\n\nfunction News(props) {\n  const [global, setGlobal] = useState({ articles: [], loading: true });\n  const [local, setLocal] = useState({\n    articles: [],\n    loading: true,\n    title: \"Local Coronavirus News\",\n  });\n  const [authed, setAuthed] = useState(props.authed);\n  const { addToast } = useToasts();\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n\n  useEffect(() => {\n    if (props.authed !== authed) {\n      setAuthed(props.authed);\n      setLocal({ ...local, loading: true });\n    }\n  }, [props.authed]);\n\n  let handleGetNews = (term) => {\n    return new Promise((res, rej) => {\n      fetch(\n        `https://covinfo.tech/getNews${term ? `?term=${getName(term)}` : \"\"}`\n      )\n        .then((d) => d.json())\n        .then((json) => {\n          res(json.articles);\n        })\n        .catch((e) => {\n          rej(e.message);\n        });\n    });\n  };\n\n  let getLocalNews = () => {\n    if (authed && props.user) {\n      let usr = props.user;\n      if (usr.country) {\n        handleGetNews(usr.country)\n          .then((articles) => {\n            setLocal({\n              articles,\n              loading: false,\n              title: `Local Coronavirus News (${usr.country})`,\n              country: usr.country,\n            });\n          })\n          .catch((e) =>\n            addToast(e, {\n              appearance: \"error\",\n              autoDismiss: true,\n            })\n          );\n      } else {\n        handleGetNews(\"United States of America\")\n          .then((articles) => {\n            setLocal({\n              articles,\n              loading: false,\n              title: `Local Coronavirus News (US)`,\n              country: \"US\",\n            });\n          })\n          .catch((e) =>\n            addToast(e, {\n              appearance: \"error\",\n              autoDismiss: true,\n            })\n          );\n      }\n    } else {\n      handleGetNews(\"United States of America\")\n        .then((articles) => {\n          setLocal({\n            articles,\n            loading: false,\n            title: `Local Coronavirus News (US)`,\n            country: \"US\",\n          });\n        })\n        .catch((e) =>\n          addToast(e, {\n            appearance: \"error\",\n            autoDismiss: true,\n          })\n        );\n    }\n  };\n\n  useEffect(() => {\n    document.title = \"Dashboard | COVinfo\";\n    handleGetNews().then((articles) => {\n      setGlobal({ articles, loading: false });\n    });\n    getLocalNews();\n  }, []);\n\n  if (isSmallDevice) {\n    return (\n      <div className={\"d-flex flex-column flex pt-3 pl-1\"}>\n        <Tabs defaultActiveKey=\"global\" id={\"newsTabs\"}>\n          <Tab eventKey=\"global\" title=\"Global\" className={\"mb-4 h-100\"}>\n            <div className=\"d-flex flex-column h-100\">\n              <div\n                className={`pt-1 pl-1 flex d-flex flex-column align-items-center ${\n                  local.loading ? \"justify-content-center\" : \"\"\n                }`}\n              >\n                <Scrollbars\n                  renderView={(props) => (\n                    <div\n                      {...props}\n                      className={`pr-2 flex d-flex flex-column align-items-center ${\n                        global.loading ? \"justify-content-center\" : \"\"\n                      }`}\n                    />\n                  )}\n                >\n                  {global.loading ? (\n                    <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n                  ) : (\n                    global.articles.map((article) => {\n                      if (article.title && article.title.trim() !== \"\") {\n                        return (\n                          <NewsStory\n                            article={article}\n                            key={\n                              article.publishedAt +\n                              article.title +\n                              `${Math.random() * 5}`\n                            }\n                          />\n                        );\n                      }\n                      return null;\n                    })\n                  )}\n                </Scrollbars>\n              </div>\n            </div>\n          </Tab>\n          <Tab\n            eventKey=\"local\"\n            title={\n              <>\n                Local\n                <ReactCountryFlag\n                  countryCode={local.country || \"\"}\n                  className=\"ml-1\"\n                />\n              </>\n            }\n            className={\"mb-4 h-100\"}\n          >\n            <div className=\"d-flex flex-column h-100\">\n              <div\n                className={`pt-1 pl-1 flex d-flex flex-column align-items-center ${\n                  local.loading ? \"justify-content-center\" : \"\"\n                }`}\n              >\n                <Scrollbars\n                  renderView={(props) => (\n                    <div\n                      {...props}\n                      className={`pr-2 flex d-flex flex-column align-items-center ${\n                        local.loading ? \"justify-content-center\" : \"\"\n                      }`}\n                    />\n                  )}\n                >\n                  {local.loading ? (\n                    <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n                  ) : (\n                    local.articles.map((article) => {\n                      if (article.title && article.title.trim() !== \"\") {\n                        return (\n                          <NewsStory\n                            article={article}\n                            key={\n                              article.publishedAt +\n                              article.title +\n                              `${Math.random() * 5}`\n                            }\n                          />\n                        );\n                      }\n                      return null;\n                    })\n                  )}\n                </Scrollbars>\n              </div>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"d-flex flex-row flex p-3\">\n      <div className=\"d-flex flex-column flex\">\n        <h3 className=\"ml-2\">Global Coronavirus News</h3>\n        <div\n          className={`p-1 flex d-flex flex-column align-items-center ${\n            local.loading ? \"justify-content-center\" : \"\"\n          }`}\n        >\n          <Scrollbars\n            renderView={(props) => (\n              <div\n                {...props}\n                className={`pr-3 flex d-flex flex-column align-items-center ${\n                  global.loading ? \"justify-content-center\" : \"\"\n                }`}\n              />\n            )}\n          >\n            {global.loading ? (\n              <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n            ) : (\n              global.articles.map((article) => {\n                if (article.title && article.title.trim() !== \"\") {\n                  return (\n                    <NewsStory\n                      article={article}\n                      key={\n                        article.publishedAt +\n                        article.title +\n                        `${Math.random() * 5}`\n                      }\n                    />\n                  );\n                }\n                return null;\n              })\n            )}\n          </Scrollbars>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex\">\n        <div className=\"ml-2 d-flex flex-row align-items-center mb-2\">\n          <h3 className=\"m-0\">{local.title}</h3>\n          <ReactCountryFlag\n            countryCode={local.country || \"\"}\n            className=\"ml-1\"\n          />\n        </div>\n        <div\n          className={`p-1 flex d-flex flex-column align-items-center ${\n            local.loading ? \"justify-content-center\" : \"\"\n          }`}\n        >\n          <Scrollbars\n            renderView={(props) => (\n              <div\n                {...props}\n                className={`pr-3 flex d-flex flex-column align-items-center ${\n                  local.loading ? \"justify-content-center\" : \"\"\n                }`}\n              />\n            )}\n          >\n            {local.loading ? (\n              <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n            ) : (\n              local.articles.map((article) => {\n                if (article.title && article.title.trim() !== \"\") {\n                  return (\n                    <NewsStory\n                      article={article}\n                      key={\n                        article.publishedAt +\n                        article.title +\n                        `${Math.random() * 5}`\n                      }\n                    />\n                  );\n                }\n                return null;\n              })\n            )}\n          </Scrollbars>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(News);\n","import React from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\n\nfunction ChatMessage(props) {\n  return (\n    <div className=\"mb-2 chatMessage bg-white p-2\">\n      <div className=\"d-flex flex-row align-items-center mb-1\">\n        <h6\n          style={{ color: \"#\" + props.message.username_color }}\n          className=\"mb-0 font-weight-bold\"\n        >\n          {props.message.username}\n        </h6>\n        <ReactCountryFlag\n          countryCode={props.message.country}\n          className=\"ml-1\"\n        />\n      </div>\n      <span className=\"ml-2\">{props.message.message}</span>\n    </div>\n  );\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Send } from \"react-feather\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport ChatMessage from \"./chatMessage\";\nimport openSocket from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useMediaQuery } from \"react-responsive\";\nconst socket = openSocket(process.env.REACT_APP_DOMAIN);\n\nfunction Chat(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const messagesRef = useRef(messages);\n  const scrollBar = useRef(null);\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    messagesRef.current = messages;\n  });\n\n  let receiveMessage = (msg) => {\n    setMessages([...messagesRef.current, msg]);\n    scrollToBottom();\n  };\n\n  useEffect(() => {\n    document.title = \"Chat | COVinfo\";\n    socket.on(\"message\", receiveMessage);\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  let scrollToBottom = () => {\n    scrollBar.current.scrollToBottom();\n  };\n\n  let sendMessage = () => {\n    fetch(\n      encodeURI(\n        `${process.env.REACT_APP_DOMAIN}chat/sendMessage?message=${message}&username=${props.user.username}&username_color=${props.user.username_color}&country=${props.user.country}`\n      ),\n      { method: \"POST\" }\n    )\n      .then((res) => {\n        setMessage(\"\");\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem sending the message.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let _handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\">\n      <div className=\"flex pl-3 pt-3 pr-3 d-flex flex-column\">\n        <h3 className={isSmallDevice ? \"align-self-center text-center\" : \"\"}>\n          Quarantine Chat\n        </h3>\n        <Scrollbars\n          renderView={(props) => <div {...props} className=\"pr-3 flex\" />}\n          ref={scrollBar}\n        >\n          {messages.map((msg) => (\n            <ChatMessage\n              message={msg}\n              key={`${msg.username}_${Math.random() * 10}`}\n            />\n          ))}\n        </Scrollbars>\n      </div>\n      <div className=\"w-100 p-3\">\n        <div className=\"w-100 d-flex flex-row rounded-pill messageInputContainer\">\n          <input\n            type={\"text\"}\n            className=\"flex bg-transparent border-0 py-2 px-3 messageInput\"\n            placeholder={\n              props.authed ? \"Message...\" : \"Login to enable chat...\"\n            }\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={_handleKeyPress}\n            value={message}\n            disabled={!props.authed}\n          />\n          {message.trim() !== \"\" ? (\n            <button\n              className=\"bg-primary border-0 d-flex align-items-center justify-content-center pl-3 pr-4\"\n              style={{\n                borderTopRightRadius: 100,\n                borderBottomRightRadius: 100,\n              }}\n              onClick={sendMessage}\n            >\n              <Send color={\"white\"} />\n            </button>\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React, { useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport { Facebook, GitHub } from \"react-feather\";\nimport { Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  let handleNavigateToRegister = () => {\n    history.push(\"/register\");\n  };\n\n  let handleLoginWithEmail = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithFacebook = () => {\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then()\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithGithub = () => {\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GithubAuthProvider())\n      .then()\n      .then((user) => {\n        history.push(\"/\");\n        addToast(\"Logged in.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex align-items-center justify-content-center offWhiteBackground overflow-auto\">\n      <div\n        className={\n          isSmallDevice\n            ? \"bg-white d-flex flex-column align-items-center rounded\"\n            : \"bg-white d-flex flex-column align-items-center form-padding rounded boxShadow\"\n        }\n      >\n        <h3>Log in</h3>\n        <div\n          style={{\n            height: 1,\n            width: \"25%\",\n            backgroundColor: \"gray\",\n            marginBottom: 15,\n          }}\n        />\n        <div className=\"d-flex flex-row align-items-center justify-content-center p-3\">\n          <button\n            className=\"smLoginButton bg-white rounded-circle p-2 d-flex align-items-center justify-content-center mx-2\"\n            onClick={handleLoginWithFacebook}\n          >\n            <Facebook />\n          </button>\n          <button\n            className=\"smLoginButton bg-white rounded-circle p-2 d-flex align-items-center justify-content-center mx-2\"\n            onClick={handleLoginWithGithub}\n          >\n            <GitHub />\n          </button>\n        </div>\n        <span className=\"mb-2 text-muted\">or use your email</span>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email...\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password...\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <button className=\"bg-transparent border-0 float-right align-self-end mb-3\">\n            Forgot Password?\n          </button>\n        </Form>\n        <button\n          className=\"bg-white smLoginButton rounded-pill py-2 px-3\"\n          onClick={handleLoginWithEmail}\n        >\n          Log in\n        </button>\n        <button\n          className=\"bg-white smLoginButton rounded-pill py-2 px-3 mt-3\"\n          onClick={handleNavigateToRegister}\n        >\n          Register\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","let initState = { user: null, authed: false };\n\nlet rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER\":\n      return { ...state, user: action.user, authed: true };\n    case \"CLEAR_USER\":\n      return { ...state, user: null, authed: false };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst rootStore = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default rootStore;\n","import React, { useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport { Facebook, GitHub } from \"react-feather\";\nimport { Form, Tab, Tabs } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { getData } from \"country-list\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [country, setCountry] = useState(\"US\");\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const countries = getData();\n  const { addToast } = useToasts();\n\n  let history = useHistory();\n\n  let validateEmail = (eml) => {\n    let regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(eml).toLowerCase());\n  };\n\n  let createUserData = (uid) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(uid)\n      .set({ username, country, username_color: \"000000\", user_id: uid })\n      .then(() => {\n        history.push(\"/\");\n        addToast(\"User created.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleRegisterWithEmail = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (email.trim() === \"\" || !validateEmail(email)) {\n      return addToast(\"A valid email is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (password.trim() === \"\" || confirmPassword.trim() === \"\") {\n      return addToast(\"A valid password is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    if (password === confirmPassword) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then((user) => {\n          createUserData(user.user.uid);\n        })\n        .catch((e) => {\n          addToast(e.message, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    } else {\n      return addToast(\"Passwords do not match\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let handleLoginWithFacebook = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then()\n      .then((user) => {\n        createUserData(user.user.uid);\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleLoginWithGithub = () => {\n    if (username.trim() === \"\") {\n      return addToast(\"A valid username is required.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GithubAuthProvider())\n      .then()\n      .then((user) => {\n        createUserData(user.user.uid);\n      })\n      .catch((e) => {\n        addToast(e.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div\n      className={\n        isSmallDevice\n          ? \"w-100 h-100 d-flex justify-content-center offWhiteBackground overflow-auto\"\n          : \"w-100 h-100 d-flex justify-content-center align-items-center offWhiteBackground overflow-auto\"\n      }\n    >\n      <div\n        className={\n          isSmallDevice\n            ? \"bg-white d-flex flex-column form-padding align-items-center rounded px-3\"\n            : \"bg-white d-flex flex-column form-padding align-items-center rounded boxShadow\"\n        }\n      >\n        <h3>Register</h3>\n        <div\n          style={{\n            height: 1,\n            width: \"25%\",\n            backgroundColor: \"gray\",\n            marginBottom: 15,\n          }}\n        />\n        <Tabs defaultActiveKey=\"email\" id={\"registerTabs\"}>\n          <Tab\n            eventKey=\"email\"\n            title=\"Email\"\n            className={isSmallDevice ? \"mt-2 mb-4\" : \"mt-2\"}\n          >\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"emailUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"emailEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email...\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password...\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"emailConfirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password...\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill py-2 px-3\"\n                onClick={handleRegisterWithEmail}\n              >\n                Register\n              </button>\n            </div>\n          </Tab>\n          <Tab eventKey=\"facebook\" title=\"Facebook\" className=\"mt-2\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"facebookUsername\">\n                  <Form.Label>Create Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Create Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"facebookCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill py-2 px-3\"\n                onClick={handleLoginWithFacebook}\n              >\n                <Facebook /> Register\n              </button>\n            </div>\n          </Tab>\n          <Tab eventKey=\"github\" title=\"Github\" className=\"mt-2\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Form>\n                <Form.Group controlId=\"githubUsername\">\n                  <Form.Label>Create Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Create Username...\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"githubCountry\">\n                  <Form.Label>Country</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                  >\n                    {countries.map((country) => (\n                      <option key={country.code} value={country.code}>\n                        {country.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <button\n                className=\"bg-white smLoginButton rounded-pill py-2 px-3\"\n                onClick={handleLoginWithGithub}\n              >\n                <GitHub /> Register\n              </button>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getData } from \"country-list\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport { TwitterPicker } from \"react-color\";\nimport { LogOut } from \"react-feather\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Logo from \"./logo\";\n\nfunction Settings(props) {\n  const [username, setUsername] = useState(\n    props.user ? props.user.username : \"\"\n  );\n  const [country, setCountry] = useState(props.user ? props.user.country : \"\");\n  const [color, setColor] = useState(\n    props.user ? props.user.username_color : \"ffffff\"\n  );\n  const [updatedValues, setUpdatedValues] = useState({});\n  const [colorPicker, setColorPicker] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const countries = getData();\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (props.user) {\n      setLoading(false);\n      if (props.user.username !== username) {\n        setUsername(props.user.username);\n      }\n      if (props.user.country !== country) {\n        setCountry(props.user.country);\n      }\n      if (props.user.username_color !== color) {\n        setColor(props.user.username_color);\n      }\n    }\n  }, [props.user, username, setUsername, country, setCountry, color, setColor]);\n\n  let handleSaveUser = () => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(props.user.user_id)\n      .update(updatedValues)\n      .then(() => {\n        props.updateUser({ ...props.user, ...updatedValues });\n        setUpdatedValues({});\n        addToast(\"User saved.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem saving the user.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let handleUpdateValue = (key, value) => {\n    let temp = updatedValues;\n    temp[key] = value;\n    setUpdatedValues(temp);\n  };\n\n  let toggleColorPicker = () => {\n    setColorPicker(!colorPicker);\n  };\n\n  let handleLogOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push(\"/\");\n        addToast(\"Logged out.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem logging out.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex align-items-center justify-content-center offWhiteBackground position-relative\">\n      {loading ? (\n        <div\n          style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n          }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : null}\n      <div className=\"bg-white d-flex flex-column align-items-center p-5 rounded boxShadow\">\n        <h3>Settings</h3>\n        <div style={{ height: 1, width: \"25%\", backgroundColor: \"gray\" }} />\n        <Form>\n          <Form.Group controlId=\"settingsUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username...\"\n              value={updatedValues.username || username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n                handleUpdateValue(\"username\", e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"settingsCountry\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={updatedValues.country || country}\n              onChange={(e) => {\n                setCountry(e.target.value);\n                handleUpdateValue(\"country\", e.target.value);\n              }}\n            >\n              {countries.map((country) => (\n                <option key={country.code} value={country.code}>\n                  {country.name}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"settingsColor\">\n            <div className=\"d-flex flex-row align-items-center justify-content-center\">\n              <div\n                className=\"rounded mr-2 position-relative\"\n                style={{\n                  width: 30,\n                  height: 30,\n                  backgroundColor: `#${updatedValues.username_color || color}`,\n                }}\n              >\n                <div\n                  style={{ cursor: \"pointer\", width: 30, height: 30 }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    toggleColorPicker();\n                  }}\n                />\n                {colorPicker ? (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      left: \"-20%\",\n                      top: \"130%\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        position: \"fixed\",\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                      }}\n                      onClick={toggleColorPicker}\n                    />\n                    <TwitterPicker\n                      color={`#${updatedValues.username_color || color}`}\n                      onChangeComplete={(color) => {\n                        setColor(color.hex.split(\"#\")[1]);\n                        handleUpdateValue(\n                          \"username_color\",\n                          color.hex.split(\"#\")[1]\n                        );\n                        toggleColorPicker();\n                      }}\n                    />\n                  </div>\n                ) : null}\n              </div>\n              <h6 className=\"mb-0\">Username Color</h6>\n            </div>\n          </Form.Group>\n        </Form>\n        <button\n          className={`bg-white smLoginButton rounded-pill py-2 px-3 ${\n            Object.keys(updatedValues).length === 0 ? \"fullButton\" : \"\"\n          }`}\n          onClick={handleSaveUser}\n          disabled={Object.keys(updatedValues).length === 0}\n        >\n          Save User\n        </button>\n        <button\n          className=\"bg-white smLoginButton rounded-pill py-2 px-3 text-danger mt-2\"\n          onClick={handleLogOut}\n        >\n          <LogOut /> Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return { updateUser: (user) => dispatch({ type: \"UPDATE_USER\", user }) };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","let searchYoutube = (term) => {\n  return new Promise((res, rej) => {\n    fetch(\n      `https://www.googleapis.com/youtube/v3/search?key=${\n        process.env.REACT_APP_GOOGLE_API_KEY\n      }&part=snippet&videoEmbeddable=true&q=${encodeURI(\n        term\n      )}&type=video&videoCategoryId=10`,\n      {\n        headers: {\n          Accept: \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.items) {\n          res(json.items);\n        } else {\n          rej(\"No videos found\");\n        }\n      })\n      .catch((e) => rej(e));\n  });\n};\n\nexport default searchYoutube;\n","import React, { useEffect, useState } from \"react\";\nimport searchYoutube from \"../utils/youtubeHandler\";\nimport firebase from \"firebase/app\";\nimport moment from \"moment\";\nimport ReactPlayer from \"react-player\";\nimport {\n  Search,\n  ThumbsUp,\n  UploadCloud,\n  Filter,\n  Clock,\n  Trash,\n} from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\nimport InputMask from \"react-input-mask\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\nimport { useMediaQuery } from \"react-responsive/src\";\n\nfunction Music(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchedSongs, setSearchedSongs] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const [addSongModalVisible, setAddSongModalVisible] = useState(false);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [timestamp, setTimestamp] = useState(\"00:00:00\");\n  const [sortType, setSortType] = useState(\"popular\");\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const { addToast } = useToasts();\n\n  let loadSongs = () => {\n    firebase\n      .firestore()\n      .collection(\"songs\")\n      .get()\n      .then((snapshot) => {\n        let temp = [];\n        snapshot.forEach((song) => temp.push(song.data()));\n        setSongs(sortSongs(temp));\n        setLoading(false);\n        setForceUpdate(!forceUpdate);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem loading the songs.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  useEffect(() => {\n    document.title = \"Music | COVinfo\";\n    loadSongs();\n  }, []);\n\n  let changeSortType = async (type) => {\n    if (sortType !== type) {\n      setSortType(type);\n      setSongs(sortSongs(songs, type));\n      setForceUpdate(!forceUpdate);\n      addToast(`Filtering by ${type}.`, {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let sortSongs = (sngs, type = sortType) => {\n    switch (type) {\n      case \"recent\":\n        sngs.sort((a, b) => {\n          return moment(b.created_at) - moment(a.created_at);\n        });\n        break;\n      default:\n        sngs.sort((a, b) => b.upvotes.length - a.upvotes.length);\n        break;\n    }\n    return sngs;\n  };\n\n  let addSong = () => {\n    if (selectedSong !== null) {\n      let newSong = {\n        url: `https://youtube.com/watch?v=${selectedSong.id.videoId}`,\n        title: selectedSong.snippet.title,\n        seconds: parseTimestamp(),\n        created_at: moment().toISOString(),\n        upvotes: [],\n        user: props.user,\n        song_id: \"\",\n      };\n      firebase\n        .firestore()\n        .collection(\"songs\")\n        .add(newSong)\n        .then((docRef) => {\n          firebase\n            .firestore()\n            .collection(\"songs\")\n            .doc(docRef.id)\n            .update({ song_id: docRef.id })\n            .then(() => {\n              let temp = songs;\n              temp.push({ ...newSong, song_id: docRef.id });\n              setSongs(sortSongs(temp));\n              setSearchTerm(\"\");\n              closeAddSongModal();\n              addToast(\"Song added.\", {\n                appearance: \"success\",\n                autoDismiss: true,\n              });\n            })\n            .catch((e) => {\n              console.log(e);\n              addToast(\"There was a problem adding the song.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem adding the song.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  let _handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchForSong();\n    }\n  };\n\n  let searchForSong = () => {\n    if (searchTerm.trim() !== \"\") {\n      searchYoutube(searchTerm)\n        .then((songs) => {\n          setSearchedSongs(songs);\n          setAddSongModalVisible(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem searching YouTube.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    } else {\n      setSearchedSongs([]);\n    }\n  };\n\n  let parseTimestamp = () => {\n    let durs = timestamp.split(\":\");\n    let hours = parseInt(durs[0]);\n    let minutes = parseInt(durs[1]);\n    let seconds = parseInt(durs[2]);\n    return (\n      moment.duration(hours, \"hours\").asSeconds() +\n      moment.duration(minutes, \"minutes\").asSeconds() +\n      seconds\n    );\n  };\n\n  let decodeHtmlEntity = (str) => {\n    return str.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  let closeAddSongModal = () => {\n    setAddSongModalVisible(false);\n    setTimestamp(\"00:00:00\");\n    setSelectedSong(null);\n    setSearchedSongs([]);\n  };\n\n  let toggleUpvote = (song_id) => {\n    let index = songs.findIndex((s) => s.song_id === song_id);\n    let upvotes = songs[index].upvotes;\n    if (upvotes.includes(props.user.user_id)) {\n      upvotes = upvotes.filter((user_id) => user_id !== props.user.user_id);\n    } else {\n      upvotes.push(props.user.user_id);\n    }\n    let temp = songs;\n    temp[index] = { ...temp[index], upvotes };\n    firebase\n      .firestore()\n      .collection(\"songs\")\n      .doc(song_id)\n      .update({ upvotes })\n      .then(() => {\n        setSongs(sortSongs(temp));\n        setForceUpdate(!forceUpdate);\n        addToast(\"Upvote toggled.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem toggling the upvote.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let deleteSong = (song_id) => {\n    if (window.confirm(\"Are you sure you want to delete that song?\")) {\n      firebase\n        .firestore()\n        .collection(\"songs\")\n        .doc(song_id)\n        .delete()\n        .then(() => {\n          setSongs(sortSongs(songs.filter((song) => song.song_id !== song_id)));\n          setForceUpdate(!forceUpdate);\n          addToast(\"The song was deleted.\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem deleting the song.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\">\n      <Modal show={addSongModalVisible} onHide={closeAddSongModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Suggest A Song</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            {searchedSongs.map((song) => (\n              <button\n                className={`w-100 border-0 ${\n                  selectedSong\n                    ? song.id.videoId === selectedSong.id.videoId\n                      ? \"border-info\"\n                      : \"bg-transparent\"\n                    : \"bg-transparent\"\n                }`}\n                onClick={() => setSelectedSong(song)}\n              >\n                <div className=\"d-flex flex flex-row align-items-center my-2\">\n                  <img\n                    src={song.snippet.thumbnails.default.url}\n                    width={song.snippet.thumbnails.default.width * (2 / 3)}\n                    height={song.snippet.thumbnails.default.height * (2 / 3)}\n                    alt={\"thumbnail\"}\n                  />\n                  <div className=\"ml-2 text-left\">\n                    <h5 className=\"mb-0 text-dark\">\n                      {decodeHtmlEntity(song.snippet.title)}\n                    </h5>\n                    <span className=\"ml-2 h6 text-black-50\">\n                      {song.snippet.channelTitle} ·\n                      {moment(song.snippet.publishedAt).fromNow()}\n                    </span>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n          <Form.Group>\n            <Form.Label>Timestamp</Form.Label>\n            <InputMask\n              mask={\"99:99:99\"}\n              defaultValue={timestamp}\n              onChange={(e) => setTimestamp(e.target.value)}\n            >\n              {(inputProps) => <Form.Control type={\"text\"} {...inputProps} />}\n            </InputMask>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            className=\"d-flex flex-row align-items-center\"\n            onClick={addSong}\n          >\n            <UploadCloud className=\"mr-1\" /> Suggest Song\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"w-100 px-3 mt-3 d-flex flex-column\">\n        <h3 className={isSmallDevice ? \"align-self-center text-center\" : \"\"}>\n          Hand Washing Music\n        </h3>\n        <div className=\"w-100 d-flex flex-row rounded-pill messageInputContainer\">\n          <input\n            type={\"text\"}\n            className=\"flex bg-transparent border-0 py-2 px-3 messageInput\"\n            placeholder={\n              props.authed\n                ? \"Add song from YouTube...\"\n                : \"Login to enable adding songs...\"\n            }\n            onChange={(e) => setSearchTerm(e.target.value)}\n            disabled={!props.authed}\n            onKeyDown={_handleKeyPress}\n            value={searchTerm}\n          />\n          {searchTerm.trim() !== \"\" ? (\n            <button\n              className=\"bg-primary border-0 d-flex align-items-center justify-content-center pl-3 pr-4\"\n              style={{\n                borderTopRightRadius: 100,\n                borderBottomRightRadius: 100,\n              }}\n              onClick={searchForSong}\n            >\n              <Search color={\"white\"} />\n            </button>\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n      {loading ? (\n        <div className=\"d-flex align-items-center justify-content-center w-100 flex\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : (\n        <div className={isSmallDevice ? \"h-100\" : \"h-100 p-3\"}>\n          <Dropdown className=\"mb-3 d-flex justify-content-end\">\n            <Dropdown.Toggle variant=\"light\">\n              Filter <Filter />\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() => changeSortType(\"popular\")}\n                style={{\n                  backgroundColor:\n                    sortType === \"popular\" ? \"lightgray\" : \"white\",\n                }}\n              >\n                <div className=\"d-flex flex-row align-items-center\">\n                  <span className=\"flex\">Popular</span> <ThumbsUp />\n                </div>\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => changeSortType(\"recent\")}\n                style={{\n                  backgroundColor:\n                    sortType === \"recent\" ? \"lightgray\" : \"white\",\n                }}\n              >\n                <div className=\"d-flex flex-row align-items-center\">\n                  <span className=\"flex\">Recent</span> <Clock />\n                </div>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Scrollbars\n            hideTracksWhenNotNeeded\n            renderView={(props) => (\n              <div\n                {...props}\n                style={{\n                  ...props.style,\n                  marginBottom: 50,\n                  paddingRight: 8,\n                }}\n              />\n            )}\n          >\n            {songs.map((song) => (\n              <div\n                className=\"border d-inline-block m-1 flex\"\n                style={{ borderRadius: 10, borderColor: \"lightgray\" }}\n                key={song.song_id}\n              >\n                <ReactPlayer\n                  url={`${song.url}&t=${song.seconds}`}\n                  controls={false}\n                  className=\"p-2\"\n                  width={\"100%\"}\n                />\n                <div\n                  style={{\n                    height: 1,\n                    width: \"100%\",\n                    backgroundColor: \"lightgray\",\n                  }}\n                />\n                <div\n                  className={\n                    isSmallDevice\n                      ? \"p-2 d-flex flex-column justify-content-center\"\n                      : \"p-2 d-flex flex-row align-items-center\"\n                  }\n                >\n                  <div className=\"flex\">\n                    <span>Submitted by: </span>\n                    <span style={{ color: `#${song.user.username_color}` }}>\n                      {song.user.username}\n                    </span>\n                    <ReactCountryFlag\n                      countryCode={song.user.country}\n                      className=\"ml-1\"\n                    />\n                  </div>\n                  <div className=\"d-flex flex-row align-items-center\">\n                    {props.authed && props.user.type === \"admin\" ? (\n                      <button\n                        className=\"bg-transparent border-0\"\n                        onClick={() => deleteSong(song.song_id)}\n                      >\n                        <Trash className=\"text-danger\" />\n                      </button>\n                    ) : null}\n                    <span>({song.upvotes.length})</span>\n                    <button\n                      className=\"bg-transparent border-0\"\n                      onClick={() => toggleUpvote(song.song_id)}\n                      disabled={!props.authed}\n                      title={!props.authed ? \"Login to enable upvoting\" : null}\n                    >\n                      <ThumbsUp\n                        color={\n                          props.authed\n                            ? song.upvotes.includes(props.user.user_id)\n                              ? \"gold\"\n                              : \"black\"\n                            : \"gray\"\n                        }\n                      />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </Scrollbars>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Music);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport moment from \"moment\";\nimport {\n  ThumbsUp,\n  UploadCloud,\n  Filter,\n  Image,\n  Clock,\n  Trash,\n} from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, Dropdown, ProgressBar } from \"react-bootstrap\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Dropzone from \"react-dropzone\";\nimport Masonry from \"react-masonry-css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Logo from \"./logo\";\nimport { useMediaQuery } from \"react-responsive/src\";\n\nfunction Memes(props) {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const [addMemeModalVisible, setAddMemeModalVisible] = useState(false);\n  const [uploadingImage, setUploadingImage] = useState(<Image size={100} />);\n  const [deleteHovered, setDeleteHovered] = useState(false);\n  const [memeToUpload, setMemeToUpload] = useState(null);\n  const [sortType, setSortType] = useState(\"popular\");\n  const [uploadingProgress, setUploadingProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const widthRef = useRef(null);\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n  const { addToast } = useToasts();\n\n  let loadMemes = () => {\n    firebase\n      .firestore()\n      .collection(\"memes\")\n      .get()\n      .then((snapshot) => {\n        let temp = [];\n        snapshot.forEach((meme) => temp.push(meme.data()));\n        setMemes(sortMemes(temp));\n        setLoading(false);\n        setForceUpdate(!forceUpdate);\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem loading the memes.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  useEffect(() => {\n    loadMemes();\n  }, []);\n\n  let changeSortType = async (type) => {\n    if (sortType !== type) {\n      setSortType(type);\n      setMemes(sortMemes(memes, type));\n      setForceUpdate(!forceUpdate);\n      addToast(`Filtering by ${type}.`, {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  let sortMemes = (mms, type = sortType) => {\n    switch (type) {\n      case \"recent\":\n        mms.sort((a, b) => {\n          return moment(b.created_at) - moment(a.created_at);\n        });\n        break;\n      default:\n        mms.sort((a, b) => b.upvotes.length - a.upvotes.length);\n        break;\n    }\n    return mms;\n  };\n\n  let addMeme = () => {\n    if (memeToUpload) {\n      setUploading(true);\n      let newMeme = {\n        url: \"\",\n        created_at: \"\",\n        upvotes: [],\n        user: props.user,\n        meme_id: \"\",\n      };\n      firebase\n        .firestore()\n        .collection(\"memes\")\n        .add(newMeme)\n        .then((docRef) => {\n          newMeme.meme_id = docRef.id;\n          let uploadTask = firebase\n            .storage()\n            .ref(`images/${newMeme.meme_id}`)\n            .put(memeToUpload);\n          uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n              const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n              );\n              setUploadingProgress(progress);\n            },\n            (e) => {\n              console.log(e);\n              addToast(\"There was a problem adding the meme.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            },\n            () => {\n              firebase\n                .storage()\n                .ref(\"images\")\n                .child(newMeme.meme_id)\n                .getDownloadURL()\n                .then((url) => {\n                  newMeme.url = url;\n                  newMeme.created_at = moment().toISOString();\n                  firebase\n                    .firestore()\n                    .collection(\"memes\")\n                    .doc(newMeme.meme_id)\n                    .update(newMeme)\n                    .then(() => {\n                      let temp = memes;\n                      temp.push(newMeme);\n                      setMemes(sortMemes(temp));\n                      setUploading(false);\n                      closeAddMemeModal();\n                      addToast(\"Meme added.\", {\n                        appearance: \"success\",\n                        autoDismiss: true,\n                      });\n                    })\n                    .catch((e) => {\n                      console.log(e);\n                      addToast(\"There was a problem adding the meme.\", {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                    });\n                })\n                .catch((e) => {\n                  console.log(e);\n                  addToast(\"There was a problem adding the meme.\", {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                });\n            }\n          );\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem adding the meme.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  let closeAddMemeModal = () => {\n    setAddMemeModalVisible(false);\n    setMemeToUpload(null);\n  };\n\n  let toggleUpvote = (meme_id) => {\n    let index = memes.findIndex((meme) => meme.meme_id === meme_id);\n    let upvotes = memes[index].upvotes;\n    if (upvotes.includes(props.user.user_id)) {\n      upvotes = upvotes.filter((user_id) => user_id !== props.user.user_id);\n    } else {\n      upvotes.push(props.user.user_id);\n    }\n    let temp = memes;\n    temp[index] = { ...temp[index], upvotes };\n    firebase\n      .firestore()\n      .collection(\"memes\")\n      .doc(meme_id)\n      .update({ upvotes })\n      .then(() => {\n        setMemes(sortMemes(temp));\n        setForceUpdate(!forceUpdate);\n        addToast(\"Upvote toggled.\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        addToast(\"There was a problem toggling the upvote.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      });\n  };\n\n  let deleteMeme = (meme_id) => {\n    if (window.confirm(\"Are you sure you want to delete that meme?\")) {\n      firebase\n        .firestore()\n        .collection(\"memes\")\n        .doc(meme_id)\n        .delete()\n        .then(() => {\n          firebase\n            .storage()\n            .ref(`images/${meme_id}`)\n            .delete()\n            .then(() => {\n              setMemes(\n                sortMemes(memes.filter((meme) => meme.meme_id !== meme_id))\n              );\n              setForceUpdate(!forceUpdate);\n              addToast(\"The meme was deleted.\", {\n                appearance: \"success\",\n                autoDismiss: true,\n              });\n            })\n            .catch((e) => {\n              console.log(e);\n              addToast(\"There was a problem deleting the meme.\", {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n            });\n        })\n        .catch((e) => {\n          console.log(e);\n          addToast(\"There was a problem deleting the meme.\", {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  return (\n    <div className=\"w-100 h-100 d-flex flex-column\" ref={widthRef}>\n      <Modal show={addMemeModalVisible} onHide={closeAddMemeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload a Meme</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"d-flex flex-column align-items-center\">\n          {memeToUpload ? (\n            <button\n              className=\"bg-transparent border-0 position-relative\"\n              onMouseEnter={() => setDeleteHovered(true)}\n              onMouseLeave={() => setDeleteHovered(false)}\n              onClick={() => setMemeToUpload(null)}\n            >\n              <img\n                src={URL.createObjectURL(memeToUpload)}\n                alt={\"memeToUpload\"}\n                style={{ borderRadius: 5, width: \"70%\" }}\n              />\n              {deleteHovered ? (\n                <div\n                  className=\"position-absolute d-flex flex-row align-items-center justify-content-center\"\n                  style={{\n                    left: 0,\n                    top: 0,\n                    bottom: 0,\n                    right: 0,\n                    backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n                  }}\n                >\n                  <Trash className=\"text-danger\" size={50} />\n                </div>\n              ) : (\n                <div />\n              )}\n            </button>\n          ) : (\n            <Dropzone\n              onDrop={(acceptedFiles) => setMemeToUpload(acceptedFiles[0])}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div\n                    {...getRootProps({\n                      className: \"dropzone\",\n                      onMouseEnter: () =>\n                        setUploadingImage(<UploadCloud size={100} />),\n                      onMouseLeave: () =>\n                        setUploadingImage(<Image size={100} />),\n                    })}\n                  >\n                    <input\n                      {...getInputProps({\n                        multiple: false,\n                        accept: \"image/png, image/jpeg, image/gif\",\n                      })}\n                    />\n                    {uploadingImage}\n                    <span>\n                      Drag 'n' drop some files here, or click to select files\n                    </span>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          )}\n          {uploading ? (\n            <ProgressBar\n              now={uploadingProgress}\n              label={`${uploadingProgress}%`}\n              className=\"w-100 mt-2\"\n            />\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            className=\"d-flex flex-row align-items-center\"\n            onClick={addMeme}\n          >\n            <UploadCloud className=\"mr-1\" /> Upload Meme\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <h3\n        className={\n          isSmallDevice\n            ? \"align-self-center px-3 pt-3 text-center\"\n            : \"px-3 pt-3\"\n        }\n      >\n        Coronavirus Memes\n      </h3>\n      <div className=\"d-flex flex-row align-items-center justify-content-between mb-3 px-3\">\n        <Button\n          variant=\"success\"\n          onClick={() => setAddMemeModalVisible(true)}\n          disabled={!props.authed}\n        >\n          {props.authed ? \"+ Add Meme\" : \"Login to add memes\"}\n        </Button>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"light\">\n            Filter <Filter />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => changeSortType(\"popular\")}\n              style={{\n                backgroundColor: sortType === \"popular\" ? \"lightgray\" : \"white\",\n              }}\n            >\n              <div className=\"d-flex flex-row align-items-center\">\n                <span className=\"flex\">Popular</span> <ThumbsUp />\n              </div>\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => changeSortType(\"recent\")}\n              style={{\n                backgroundColor: sortType === \"recent\" ? \"lightgray\" : \"white\",\n              }}\n            >\n              <div className=\"d-flex flex-row align-items-center\">\n                <span className=\"flex\">Recent</span> <Clock />\n              </div>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n      {loading ? (\n        <div className=\"d-flex align-items-center justify-content-center w-100 flex\">\n          <Logo color={\"lime\"} size={100} className=\"spinning-logo\" />\n        </div>\n      ) : (\n        <div className={isSmallDevice ? \"flex\" : \"flex p-3\"}>\n          <Scrollbars\n            hideTracksWhenNotNeeded\n            renderView={(props) => <div {...props} />}\n          >\n            <Masonry\n              className={\n                isSmallDevice\n                  ? \"pr-2 pb-5 d-flex w-100\"\n                  : \"pr-3 pb-5 d-flex w-100\"\n              }\n              breakpointCols={{ default: 4, 1224: 3, 900: 2, 700: 1 }}\n              columnClassName=\"align-items-center mx-1\"\n            >\n              {memes.map((meme) => (\n                <div\n                  className=\"border d-inline-block m-1 w-100\"\n                  style={{\n                    borderRadius: 10,\n                    borderColor: \"lightgray\",\n                  }}\n                  key={meme.meme_id}\n                >\n                  <img\n                    src={meme.url}\n                    alt={meme.meme_id}\n                    className=\"w-100 p-2\"\n                  />\n                  <div\n                    style={{\n                      height: 1,\n                      width: \"100%\",\n                      backgroundColor: \"lightgray\",\n                    }}\n                  />\n                  <div\n                    className={\n                      isSmallDevice\n                        ? \"p-2 d-flex flex-column justify-content-center\"\n                        : \"p-2 d-flex flex-row align-items-center\"\n                    }\n                  >\n                    <div className=\"flex\">\n                      <span>Submitted by: </span>\n                      <span style={{ color: `#${meme.user.username_color}` }}>\n                        {meme.user.username}\n                      </span>\n                      <ReactCountryFlag\n                        countryCode={meme.user.country}\n                        className=\"ml-1\"\n                      />\n                    </div>\n                    <div className=\"d-flex flex-row align-items-center\">\n                      {props.authed && props.user.type === \"admin\" ? (\n                        <button\n                          className=\"bg-transparent border-0\"\n                          onClick={() => deleteMeme(meme.meme_id)}\n                        >\n                          <Trash className=\"text-danger\" />\n                        </button>\n                      ) : null}\n                      <span>({meme.upvotes.length})</span>\n                      <button\n                        className=\"bg-transparent border-0\"\n                        onClick={() => toggleUpvote(meme.meme_id)}\n                        disabled={!props.authed}\n                        title={\n                          !props.authed ? \"Login to enable upvoting\" : null\n                        }\n                      >\n                        <ThumbsUp\n                          color={\n                            props.authed\n                              ? meme.upvotes.includes(props.user.user_id)\n                                ? \"gold\"\n                                : \"black\"\n                              : \"gray\"\n                          }\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </Masonry>\n          </Scrollbars>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet mapStateToProps = (state, ownProps) => {\n  return { ...ownProps, user: state.user, authed: state.authed };\n};\n\nexport default connect(mapStateToProps)(Memes);\n","import React, { useEffect } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Map from \"./components/map\";\nimport News from \"./components/news\";\nimport Chat from \"./components/chat\";\nimport Login from \"./components/login\";\nimport { Provider } from \"react-redux\";\nimport rootStore from \"./stores/rootStore\";\nimport Register from \"./components/register\";\nimport Settings from \"./components/settings\";\nimport Music from \"./components/music\";\nimport Memes from \"./components/memes\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isSmallDevice = useMediaQuery({\n    query: \"(max-device-width: 1024px)\",\n  });\n\n  return (\n    <Provider store={rootStore}>\n      <ToastProvider\n        autoDismissTimeout={3000}\n        placement={isSmallDevice ? \"bottom-center\" : \"top-right\"}\n      >\n        <Router>\n          <div className=\"d-flex inner-body h-100\">\n            <Navbar />\n            <Switch>\n              <Route path=\"/map\">\n                <Map />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"/music\">\n                <Music />\n              </Route>\n              <Route path=\"/memes\">\n                <Memes />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/settings\">\n                <Settings />\n              </Route>\n              <Route path=\"/\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </ToastProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from \"firebase/app\";\nimport rootStore from \"../stores/rootStore\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/analytics\";\nimport \"firebase/performance\";\n\nlet initFirebase = () => {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  });\n  firebase.analytics();\n  firebase.performance();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(user.uid)\n        .get()\n        .then((userData) => {\n          if (userData.exists) {\n            rootStore.dispatch({\n              type: \"UPDATE_USER\",\n              user: userData.data(),\n            });\n          } else {\n            createBasicUser(user);\n          }\n        })\n        .catch((e) => {\n          createBasicUser(user);\n        });\n    } else {\n      rootStore.dispatch({\n        type: \"CLEAR_USER\",\n      });\n    }\n  });\n};\n\nlet createBasicUser = (user) => {\n  let userData = {\n    username: user.displayName,\n    country: \"US\",\n    username_color: \"000000\",\n    user_id: user.uid,\n  };\n  firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(user.uid)\n    .set(userData)\n    .then(() =>\n      rootStore.dispatch({\n        type: \"UPDATE_USER\",\n        user: userData,\n      })\n    );\n};\n\nexport { initFirebase };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initFirebase } from \"./utils/firebaseHandler\";\nimport Modal from \"react-modal\";\n\ninitFirebase();\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}